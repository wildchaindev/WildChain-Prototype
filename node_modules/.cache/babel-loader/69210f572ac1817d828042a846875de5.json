{"ast":null,"code":"import { invariant as e } from \"@onflow/util-invariant\";\nimport { config as t } from \"@onflow/config\";\nexport { config } from \"@onflow/config\";\nimport { Transaction as n, SendTransactionRequest as r, AccessAPI as o, GetTransactionRequest as a, ExecuteScriptAtBlockIDRequest as i, ExecuteScriptAtBlockHeightRequest as u, ExecuteScriptAtLatestBlockRequest as c, GetAccountAtBlockHeightRequest as s, GetAccountAtLatestBlockRequest as l, GetEventsForHeightRangeRequest as f, GetEventsForBlockIDsRequest as d, GetBlockByIDRequest as m, GetBlockByHeightRequest as g, GetLatestBlockRequest as p, GetBlockHeaderByIDRequest as h, GetBlockHeaderByHeightRequest as v, GetLatestBlockHeaderRequest as y, GetCollectionByIDRequest as b, PingRequest as k } from \"@onflow/protobuf\";\nimport { sansPrefix as I, withPrefix as S } from \"@onflow/util-address\";\nimport { grpc as P } from \"@improbable-eng/grpc-web\";\nimport { NodeHttpTransport as w } from \"@improbable-eng/grpc-web-node-http-transport\";\nimport { encode as B } from \"@onflow/rlp\";\nimport { template as A } from \"@onflow/util-template\";\nexport { template as cadence, template as cdc } from \"@onflow/util-template\";\n\nfunction T() {\n  return (T = Object.assign || function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n\n      for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nfunction x(e) {\n  return (x = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n    return e.__proto__ || Object.getPrototypeOf(e);\n  })(e);\n}\n\nfunction E(e, t) {\n  return (E = Object.setPrototypeOf || function (e, t) {\n    return e.__proto__ = t, e;\n  })(e, t);\n}\n\nfunction N() {\n  if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n  if (Reflect.construct.sham) return !1;\n  if (\"function\" == typeof Proxy) return !0;\n\n  try {\n    return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n  } catch (e) {\n    return !1;\n  }\n}\n\nfunction j(e, t, n) {\n  return (j = N() ? Reflect.construct : function (e, t, n) {\n    var r = [null];\n    r.push.apply(r, t);\n    var o = new (Function.bind.apply(e, r))();\n    return n && E(o, n.prototype), o;\n  }).apply(null, arguments);\n}\n\nfunction L(e) {\n  var t = \"function\" == typeof Map ? new Map() : void 0;\n  return (L = function (e) {\n    if (null === e || -1 === Function.toString.call(e).indexOf(\"[native code]\")) return e;\n    if (\"function\" != typeof e) throw new TypeError(\"Super expression must either be null or a function\");\n\n    if (void 0 !== t) {\n      if (t.has(e)) return t.get(e);\n      t.set(e, n);\n    }\n\n    function n() {\n      return j(e, arguments, x(this).constructor);\n    }\n\n    return n.prototype = Object.create(e.prototype, {\n      constructor: {\n        value: n,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), E(n, e);\n  })(e);\n}\n\nfunction O(e, t) {\n  (null == t || t > e.length) && (t = e.length);\n\n  for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];\n\n  return r;\n}\n\nvar _ = '{\\n  \"tag\":\"UNKNOWN\",\\n  \"assigns\":{},\\n  \"status\":\"OK\",\\n  \"reason\":null,\\n  \"accounts\":{},\\n  \"params\":{},\\n  \"arguments\":{},\\n  \"message\": {\\n    \"cadence\":null,\\n    \"refBlock\":null,\\n    \"computeLimit\":null,\\n    \"proposer\":null,\\n    \"payer\":null,\\n    \"authorizations\":[],\\n    \"params\":[],\\n    \"arguments\":[]\\n  },\\n  \"proposer\":null,\\n  \"authorizations\":[],\\n  \"payer\":null,\\n  \"events\": {\\n    \"eventType\":null,\\n    \"start\":null,\\n    \"end\":null,\\n    \"blockIds\":[]\\n  },\\n  \"transaction\": {\\n    \"id\":null\\n  },\\n  \"block\": {\\n    \"id\":null,\\n    \"height\":null,\\n    \"isSealed\":null\\n  },\\n  \"account\": {\\n    \"addr\":null\\n  },\\n  \"collection\": {\\n    \"id\":null\\n  }\\n}',\n    G = new Set(Object.keys(JSON.parse(_))),\n    U = function () {\n  return JSON.parse(_);\n},\n    C = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\"),\n    D = function () {\n  return C[~~(Math.random() * C.length)];\n},\n    R = function () {\n  return Array.from({\n    length: 10\n  }, D).join(\"\");\n},\n    K = function (e) {\n  return Array.isArray(e);\n},\n    H = function (e) {\n  return null == e;\n},\n    F = function (e) {\n  return e.status = \"OK\", e;\n},\n    z = function (e, t) {\n  return e.status = \"BAD\", e.reason = t, e;\n},\n    q = function (e) {\n  return function (t) {\n    return t.tag = e, F(t);\n  };\n},\n    J = function (t, n) {\n  return void 0 === n && (n = {}), function (r) {\n    var o;\n    e(\"function\" == typeof t || \"object\" == typeof t, \"prepAccount must be passed an authorization function or an account object\"), e(null != n.role, \"Account must have a role\");\n    var a = JSON.parse('{\\n  \"kind\":\"ACCOUNT\",\\n  \"tempId\":null,\\n  \"addr\":null,\\n  \"keyId\":null,\\n  \"sequenceNum\":null,\\n  \"signature\":null,\\n  \"signingFunction\":null,\\n  \"resolve\":null,\\n  \"role\": {\\n    \"proposer\":false,\\n    \"authorizer\":false,\\n    \"payer\":false,\\n    \"param\":false\\n  }\\n}'),\n        i = n.role,\n        u = R();\n    return r.accounts[u] = T({}, a, {\n      tempId: u\n    }, t = \"function\" == typeof t ? {\n      resolve: t\n    } : t, {\n      role: T({}, a.role, \"object\" == typeof t.role ? t.role : {}, (o = {}, o[i] = !0, o))\n    }), \"authorizer\" === i ? r.authorizations.push(u) : r[i] = u, r;\n  };\n},\n    M = function (e) {\n  return function (t) {\n    var n = R();\n    return t.message.arguments.push(n), t.arguments[n] = JSON.parse('{\\n  \"kind\":\"ARGUMENT\",\\n  \"tempId\":null,\\n  \"value\":null,\\n  \"asArgument\":null,\\n  \"xform\":null,\\n  \"resolve\": null\\n}'), t.arguments[n].tempId = n, t.arguments[n].value = e.value, t.arguments[n].asArgument = e.asArgument, t.arguments[n].xform = e.xform, t.arguments[n].resolve = e.resolve, F(t);\n  };\n},\n    W = q(\"SCRIPT\"),\n    Y = q(\"TRANSACTION\"),\n    V = q(\"GET_TRANSACTION_STATUS\"),\n    $ = q(\"GET_TRANSACTION\"),\n    X = q(\"GET_ACCOUNT\"),\n    Q = q(\"GET_EVENTS\"),\n    Z = q(\"GET_LATEST_BLOCK\"),\n    ee = q(\"GET_BLOCK_BY_ID\"),\n    te = q(\"GET_BLOCK_BY_HEIGHT\"),\n    ne = q(\"PING\"),\n    re = q(\"GET_BLOCK\"),\n    oe = q(\"GET_BLOCK_HEADER\"),\n    ae = q(\"GET_COLLECTION\"),\n    ie = function (e) {\n  return function (t) {\n    return t.tag === e;\n  };\n},\n    ue = ie(\"UNKNOWN\"),\n    ce = ie(\"SCRIPT\"),\n    se = ie(\"TRANSACTION\"),\n    le = ie(\"GET_TRANSACTION_STATUS\"),\n    fe = ie(\"GET_TRANSACTION\"),\n    de = ie(\"GET_ACCOUNT\"),\n    me = ie(\"GET_EVENTS\"),\n    ge = ie(\"GET_LATEST_BLOCK\"),\n    pe = ie(\"GET_BLOCK_BY_ID\"),\n    he = ie(\"GET_BLOCK_BY_HEIGHT\"),\n    ve = ie(\"PING\"),\n    ye = ie(\"GET_BLOCK\"),\n    be = ie(\"GET_BLOCK_HEADER\"),\n    ke = ie(\"GET_COLLECTION\"),\n    Ie = function (e) {\n  return \"OK\" === e.status;\n},\n    Se = function (e) {\n  return \"BAD\" === e.status;\n},\n    Pe = function (e) {\n  return e.reason;\n},\n    we = function e(t, n) {\n  void 0 === n && (n = []);\n\n  try {\n    return Promise.resolve(function (r, o) {\n      try {\n        var a = Promise.resolve(t).then(function (r) {\n          if (t = function (e) {\n            for (var t = 0, n = Object.keys(e); t < n.length; t++) {\n              var r = n[t];\n              if (!G.has(r)) throw new Error('\"' + r + '\" is an invalid root level Interaction property.');\n            }\n\n            return e;\n          }(r), Se(t)) throw new Error(\"Interaction Error: \" + t.reason);\n          if (!n.length) return t;\n          var o = n[0],\n              a = n.slice(1);\n          return Promise.resolve(o).then(function (n) {\n            if (\"function\" == typeof n) return e(n(t), a);\n            if (H(n) || !n) return e(t, a);\n            if (function (e) {\n              if (null === (t = e) || \"object\" != typeof t || H(e) || function (e) {\n                return \"number\" == typeof e;\n              }(e)) return !1;\n\n              for (var t, n, r = function (e, t) {\n                var n;\n\n                if (\"undefined\" == typeof Symbol || null == e[Symbol.iterator]) {\n                  if (Array.isArray(e) || (n = function (e, t) {\n                    if (e) {\n                      if (\"string\" == typeof e) return O(e, void 0);\n                      var n = Object.prototype.toString.call(e).slice(8, -1);\n                      return \"Object\" === n && e.constructor && (n = e.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(e) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? O(e, void 0) : void 0;\n                    }\n                  }(e))) {\n                    n && (e = n);\n                    var r = 0;\n                    return function () {\n                      return r >= e.length ? {\n                        done: !0\n                      } : {\n                        done: !1,\n                        value: e[r++]\n                      };\n                    };\n                  }\n\n                  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                }\n\n                return (n = e[Symbol.iterator]()).next.bind(n);\n              }(G); !(n = r()).done;) if (!e.hasOwnProperty(n.value)) return !1;\n\n              return !0;\n            }(n)) return e(n, a);\n            throw new Error(\"Invalid Interaction Composition\");\n          });\n        });\n      } catch (e) {\n        return o(e);\n      }\n\n      return a && a.then ? a.then(void 0, o) : a;\n    }(0, function (e) {\n      throw e;\n    }));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    Be = function e() {\n  var t = [].slice.call(arguments),\n      n = t[0],\n      r = t[1];\n  return K(n) && null == r ? function (t) {\n    return e(t, n);\n  } : we(n, r);\n},\n    Ae = function (e) {\n  return e;\n},\n    Te = function (e, t, n) {\n  return null == e.assigns[t] ? n : e.assigns[t];\n},\n    xe = function (e, t) {\n  return function (n) {\n    return n.assigns[e] = t, F(n);\n  };\n},\n    Ee = function (e, t) {\n  return void 0 === t && (t = Ae), function (n) {\n    return n.assigns[e] = t(n.assigns[e], n), F(n);\n  };\n},\n    Ne = function (e) {\n  return function (t) {\n    return delete t.assigns[e], F(t);\n  };\n};\n\nfunction je(e) {\n  return void 0 === e && (e = []), Be(U(), e);\n}\n\nvar Le = function () {\n  return JSON.parse('{\\n    \"tag\":null,\\n    \"transaction\":null,\\n    \"transactionStatus\":null,\\n    \"transactionId\":null,\\n    \"encodedData\":null,\\n    \"events\":null,\\n    \"account\":null,\\n    \"block\":null,\\n    \"blockHeader\":null,\\n    \"latestBlock\":null,\\n    \"collection\":null\\n}');\n},\n    Oe = function (e, n, r) {\n  try {\n    return Promise.resolve(t().get(\"grpc.metadata\", {})).then(function (t) {\n      return new Promise(function (o, a) {\n        P.unary(n, {\n          request: r,\n          host: e,\n          metadata: new P.Metadata(t),\n          onEnd: function (e) {\n            var t = e.statusMessage;\n            e.status === P.Code.OK ? o(e.message) : a(new Error(t));\n          }\n        });\n      });\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nP.setDefaultTransport(w());\n\nvar _e = function (e) {\n  return Buffer.from(e, \"hex\");\n},\n    Ge = function (e) {\n  return Buffer.from(e.padStart(16, 0), \"hex\");\n},\n    Ue = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    Ce = function (e) {\n  return Buffer.from(JSON.stringify(e), \"utf8\");\n},\n    De = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    Re = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    Ke = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    He = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    Fe = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    ze = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    qe = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    Je = function (e) {\n  return Buffer.from(e).toString(\"hex\");\n},\n    Me = function (e, P) {\n  void 0 === P && (P = {});\n\n  try {\n    var w = function (t) {\n      return P.node = t, Promise.resolve(e).then(function (t) {\n        switch (e = t, !0) {\n          case se(e):\n            return P.sendTransaction ? P.sendTransaction(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                var a = t.unary || Oe;\n                return Promise.resolve(e).then(function (i) {\n                  e = i;\n                  var u = new n();\n                  u.setScript(function (e) {\n                    return Buffer.from(e, \"utf8\");\n                  }(e.message.cadence)), u.setGasLimit(e.message.computeLimit), u.setReferenceBlockId(e.message.refBlock ? _e(e.message.refBlock) : null), u.setPayer(Ge(I(e.accounts[e.payer].addr))), e.message.arguments.forEach(function (t) {\n                    return u.addArguments(function (e) {\n                      return Buffer.from(JSON.stringify(e), \"utf8\");\n                    }(e.arguments[t].asArgument));\n                  }), e.authorizations.map(function (t) {\n                    return e.accounts[t].addr;\n                  }).reduce(function (e, t) {\n                    return e.find(function (e) {\n                      return e === t;\n                    }) ? e : [].concat(e, [t]);\n                  }, []).forEach(function (e) {\n                    return u.addAuthorizers(Ge(I(e)));\n                  });\n                  var c = new n.ProposalKey();\n                  c.setAddress(Ge(I(e.accounts[e.proposer].addr))), c.setKeyId(e.accounts[e.proposer].keyId), c.setSequenceNumber(e.accounts[e.proposer].sequenceNum), u.setProposalKey(c);\n\n                  for (var s = 0, l = Object.values(e.accounts); s < l.length; s++) {\n                    var f = l[s];\n\n                    try {\n                      if (!f.role.payer && null != f.signature) {\n                        var d = new n.Signature();\n                        d.setAddress(Ge(I(f.addr))), d.setKeyId(f.keyId), d.setSignature(_e(f.signature)), u.addPayloadSignatures(d);\n                      }\n                    } catch (t) {\n                      throw console.error(\"Trouble applying payload signature\", {\n                        acct: f,\n                        ix: e\n                      }), t;\n                    }\n                  }\n\n                  for (var m = 0, g = Object.values(e.accounts); m < g.length; m++) {\n                    var p = g[m];\n\n                    try {\n                      if (p.role.payer && null != p.signature) {\n                        var h = new n.Signature();\n                        h.setAddress(Ge(I(p.addr))), h.setKeyId(p.keyId), h.setSignature(_e(p.signature)), u.addEnvelopeSignatures(h);\n                      }\n                    } catch (t) {\n                      throw console.error(\"Trouble applying envelope signature\", {\n                        acct: p,\n                        ix: e\n                      }), t;\n                    }\n                  }\n\n                  var v = new r();\n                  v.setTransaction(u);\n                  var y = Date.now();\n                  return Promise.resolve(a(t.node, o.SendTransaction, v)).then(function (t) {\n                    var n,\n                        r = Date.now(),\n                        o = Le();\n                    return o.tag = e.tag, o.transactionId = (n = t.getId_asU8(), Buffer.from(n).toString(\"hex\")), \"undefined\" != typeof window && window.dispatchEvent(new CustomEvent(\"FLOW::TX\", {\n                      detail: {\n                        txId: o.transactionId,\n                        delta: r - y\n                      }\n                    })), o;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case le(e):\n            return P.sendGetTransactionStatus ? P.sendGetTransactionStatus(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                var n = t.unary || Oe;\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var i = new a();\n                  return i.setId(Buffer.from(e.transaction.id, \"hex\")), Promise.resolve(n(t.node, o.GetTransactionResult, i)).then(function (t) {\n                    var n = t.getEventsList(),\n                        r = Le();\n                    return r.tag = e.tag, r.transactionStatus = {\n                      status: t.getStatus(),\n                      statusCode: t.getStatusCode(),\n                      errorMessage: t.getErrorMessage(),\n                      events: n.map(function (e) {\n                        return {\n                          type: e.getType(),\n                          transactionId: (t = e.getTransactionId_asU8(), Buffer.from(t).toString(\"hex\")),\n                          transactionIndex: e.getTransactionIndex(),\n                          eventIndex: e.getEventIndex(),\n                          payload: JSON.parse(Buffer.from(e.getPayload_asU8()).toString(\"utf8\"))\n                        };\n                        var t;\n                      })\n                    }, r;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case fe(e):\n            return P.sendGetTransaction ? P.sendGetTransaction(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                var n = t.unary || Oe;\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var i = new a();\n                  return i.setId(Buffer.from(e.transaction.id, \"hex\")), Promise.resolve(n(t.node, o.GetTransaction, i)).then(function (t) {\n                    var n = Le();\n                    n.tag = e.tag;\n\n                    var r,\n                        o = function (e) {\n                      return {\n                        address: Ue(e.getAddress_asU8()),\n                        keyId: e.getKeyId(),\n                        signature: Ue(e.getSignature_asU8())\n                      };\n                    },\n                        a = t.getTransaction();\n\n                    return n.transaction = {\n                      script: Buffer.from(a.getScript_asU8()).toString(\"utf8\"),\n                      args: a.getArgumentsList().map(function (e) {\n                        return JSON.parse(Buffer.from(e).toString(\"utf8\"));\n                      }),\n                      referenceBlockId: Ue(a.getReferenceBlockId_asU8()),\n                      gasLimit: a.getGasLimit(),\n                      proposalKey: (r = a.getProposalKey(), {\n                        address: Ue(r.getAddress_asU8()),\n                        keyId: r.getKeyId(),\n                        sequenceNumber: r.getSequenceNumber()\n                      }),\n                      payer: Ue(a.getPayer_asU8()),\n                      authorizers: a.getAuthorizersList().map(Ue),\n                      payloadSignatures: a.getPayloadSignaturesList().map(o),\n                      envelopeSignatures: a.getEnvelopeSignaturesList().map(o)\n                    }, n;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case ce(e):\n            return P.sendExecuteScript ? P.sendExecuteScript(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                var n = t.unary || Oe;\n                return Promise.resolve(e).then(function (r) {\n                  function a() {\n                    var t = Le();\n                    return t.tag = e.tag, t.encodedData = JSON.parse(Buffer.from(l.getValue_asU8()).toString(\"utf8\")), t;\n                  }\n\n                  var s, l;\n                  e = r;\n\n                  var f = function () {\n                    if (e.block.id) {\n                      (s = new i()).setBlockId(Buffer.from(e.block.id, \"hex\"));\n                      var r = Buffer.from(e.message.cadence, \"utf8\");\n                      return e.message.arguments.forEach(function (t) {\n                        return s.addArguments(Ce(e.arguments[t].asArgument));\n                      }), s.setScript(r), Promise.resolve(n(t.node, o.ExecuteScriptAtBlockID, s)).then(function (e) {\n                        l = e;\n                      });\n                    }\n\n                    var a = function () {\n                      if (e.block.height) {\n                        (s = new u()).setBlockHeight(Number(e.block.height));\n                        var r = Buffer.from(e.message.cadence, \"utf8\");\n                        return e.message.arguments.forEach(function (t) {\n                          return s.addArguments(Ce(e.arguments[t].asArgument));\n                        }), s.setScript(r), Promise.resolve(n(t.node, o.ExecuteScriptAtBlockHeight, s)).then(function (e) {\n                          l = e;\n                        });\n                      }\n\n                      s = new c();\n                      var a = Buffer.from(e.message.cadence, \"utf8\");\n                      return e.message.arguments.forEach(function (t) {\n                        return s.addArguments(Ce(e.arguments[t].asArgument));\n                      }), s.setScript(a), Promise.resolve(n(t.node, o.ExecuteScriptAtLatestBlock, s)).then(function (e) {\n                        l = e;\n                      });\n                    }();\n\n                    if (a && a.then) return a.then(function () {});\n                  }();\n\n                  return f && f.then ? f.then(a) : a();\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case de(e):\n            return P.sendGetAccount ? P.sendGetAccount(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                var n = t.unary || Oe;\n                return Promise.resolve(e).then(function (r) {\n                  var a,\n                      i = (e = r).block.height ? new s() : new l();\n                  return e.block.height && i.setBlockHeight(Number(e.block.height)), i.setAddress((a = I(e.account.addr), Buffer.from(a.padStart(16, 0), \"hex\"))), Promise.resolve(n(t.node, e.block.height ? o.GetAccountAtBlockHeight : o.GetAccountAtLatestBlock, i)).then(function (t) {\n                    var n = Le();\n                    n.tag = e.tag;\n                    var r,\n                        o = t.getAccount(),\n                        a = (r = o.getContractsMap()) ? r.getEntryList().reduce(function (e, t) {\n                      var n;\n                      return T({}, e, ((n = {})[t[0]] = Buffer.from(t[1] || new UInt8Array()).toString(\"utf8\"), n));\n                    }, {}) : {};\n                    return n.account = {\n                      address: S(De(o.getAddress_asU8())),\n                      balance: o.getBalance(),\n                      code: Buffer.from(o.getCode_asU8() || new UInt8Array()).toString(\"utf8\"),\n                      contracts: a,\n                      keys: o.getKeysList().map(function (e) {\n                        return {\n                          index: e.getIndex(),\n                          publicKey: De(e.getPublicKey_asU8()),\n                          signAlgo: e.getSignAlgo(),\n                          hashAlgo: e.getHashAlgo(),\n                          weight: e.getWeight(),\n                          sequenceNumber: e.getSequenceNumber(),\n                          revoked: e.getRevoked()\n                        };\n                      })\n                    }, n;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case me(e):\n            return P.sendGetEvents ? P.sendGetEvents(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                var n = t.unary || Oe;\n                return Promise.resolve(e).then(function (r) {\n                  function a() {\n                    var t = Le();\n                    t.tag = e.tag;\n                    var n = i.getResultsList();\n                    return t.events = n.reduce(function (e, t) {\n                      var n = Re(t.getBlockId_asU8()),\n                          r = t.getBlockHeight(),\n                          o = t.getBlockTimestamp().toDate().toISOString();\n                      return t.getEventsList().forEach(function (t) {\n                        e.push({\n                          blockId: n,\n                          blockHeight: r,\n                          blockTimestamp: o,\n                          type: t.getType(),\n                          transactionId: Re(t.getTransactionId_asU8()),\n                          transactionIndex: t.getTransactionIndex(),\n                          eventIndex: t.getEventIndex(),\n                          payload: JSON.parse(Buffer.from(t.getPayload_asU8()).toString(\"utf8\"))\n                        });\n                      }), e;\n                    }, []), t;\n                  }\n\n                  var i,\n                      u = (e = r).events.start ? new f() : new d();\n                  u.setType(e.events.eventType);\n                  var c = e.events.start ? (u.setStartHeight(Number(e.events.start)), u.setEndHeight(Number(e.events.end)), Promise.resolve(n(t.node, o.GetEventsForHeightRange, u)).then(function (e) {\n                    i = e;\n                  })) : (e.events.blockIds.forEach(function (e) {\n                    return u.addBlockIds(Buffer.from(e, \"hex\"));\n                  }), Promise.resolve(n(t.node, o.GetEventsForBlockIDs, u)).then(function (e) {\n                    i = e;\n                  }));\n                  return c && c.then ? c.then(a) : a();\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case ge(e):\n            return P.sendGetLatestBlock ? P.sendGetLatestBlock(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (n) {\n                  e = n;\n                  var r = new p();\n                  return e.latestBlock && e.latestBlock.isSealed && (r.setIsSealed(e.latestBlock.isSealed), console.error(\"\\n          %c@onflow/send Deprecation Notice\\n          ========================\\n\\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\\n\\n          =======================\\n        \".replace(/\\n\\s+/g, \"\\n\").trim(), \"font-weight:bold;font-family:monospace;\")), e.block && e.block.isSealed && r.setIsSealed(e.block.isSealed), Promise.resolve(Oe(t.node, o.GetLatestBlock, r)).then(function (t) {\n                    var n = t.getBlock(),\n                        r = n.getCollectionGuaranteesList(),\n                        o = n.getBlockSealsList(),\n                        a = n.getSignaturesList(),\n                        i = Le();\n                    return i.tag = e.tag, i.block = {\n                      id: Fe(n.getId_asU8()),\n                      parentId: Fe(n.getParentId_asU8()),\n                      height: n.getHeight(),\n                      timestamp: n.getTimestamp(),\n                      collectionGuarantees: r.map(function (e) {\n                        return {\n                          collectionId: Fe(e.getCollectionId_asU8()),\n                          signatures: e.getSignaturesList()\n                        };\n                      }),\n                      blockSeals: o.map(function (e) {\n                        return {\n                          blockId: Fe(e.getBlockId_asU8()),\n                          executionReceiptId: Fe(e.getExecutionReceiptId_asU8()),\n                          executionReceiptSignatures: e.getExecutionReceiptSignaturesList(),\n                          resultApprovalSignatures: e.getResultApprovalSignaturesList()\n                        };\n                      }),\n                      signatures: a\n                    }, i;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case ye(e):\n            return P.sendGetBlock ? P.sendGetBlock(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                var n = t.unary || Oe;\n                return Promise.resolve(e).then(function (r) {\n                  function a() {\n                    var t = u.getBlock(),\n                        n = t.getCollectionGuaranteesList(),\n                        r = t.getBlockSealsList(),\n                        o = t.getSignaturesList().map(Ke),\n                        a = Le();\n                    return a.tag = e.tag, a.block = {\n                      id: Ke(t.getId_asU8()),\n                      parentId: Ke(t.getParentId_asU8()),\n                      height: t.getHeight(),\n                      timestamp: t.getTimestamp().toDate().toISOString(),\n                      collectionGuarantees: n.map(function (e) {\n                        return {\n                          collectionId: Ke(e.getCollectionId_asU8()),\n                          signatures: e.getSignaturesList().map(Ke)\n                        };\n                      }),\n                      blockSeals: r.map(function (e) {\n                        return {\n                          blockId: Ke(e.getBlockId_asU8()),\n                          executionReceiptId: Ke(e.getExecutionReceiptId_asU8()),\n                          executionReceiptSignatures: e.getExecutionReceiptSignaturesList().map(Ke),\n                          resultApprovalSignatures: e.getResultApprovalSignaturesList().map(Ke)\n                        };\n                      }),\n                      signatures: o\n                    }, a;\n                  }\n\n                  var i, u;\n                  e = r;\n\n                  var c = function () {\n                    if (e.block.id) return (i = new m()).setId(Buffer.from(e.block.id, \"hex\")), Promise.resolve(n(t.node, o.GetBlockByID, i)).then(function (e) {\n                      u = e;\n                    });\n                    var r = e.block.height ? ((i = new g()).setHeight(Number(e.block.height)), Promise.resolve(n(t.node, o.GetBlockByHeight, i)).then(function (e) {\n                      u = e;\n                    })) : (i = new p(), e.block && e.block.isSealed && i.setIsSealed(e.block.isSealed), Promise.resolve(n(t.node, o.GetLatestBlock, i)).then(function (e) {\n                      u = e;\n                    }));\n                    return r && r.then ? r.then(function () {}) : void 0;\n                  }();\n\n                  return c && c.then ? c.then(a) : a();\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case be(e):\n            return P.sendGetBlockHeader ? P.sendGetBlockHeader(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                var n = t.unary || Oe;\n                return Promise.resolve(e).then(function (r) {\n                  function a() {\n                    var t = u.getBlock(),\n                        n = Le();\n                    return n.tag = e.tag, n.blockHeader = {\n                      id: He(t.getId_asU8()),\n                      parentId: He(t.getParentId_asU8()),\n                      height: t.getHeight(),\n                      timestamp: t.getTimestamp().toDate().toISOString()\n                    }, n;\n                  }\n\n                  var i, u;\n                  e = r;\n\n                  var c = function () {\n                    if (e.block.id) return (i = new h()).setId(Buffer.from(e.block.id, \"hex\")), Promise.resolve(n(t.node, o.GetBlockHeaderByID, i)).then(function (e) {\n                      u = e;\n                    });\n                    var r = e.block.height ? ((i = new v()).setHeight(Number(e.block.height)), Promise.resolve(n(t.node, o.GetBlockHeaderByHeight, i)).then(function (e) {\n                      u = e;\n                    })) : (i = new y(), e.block && e.block.isSealed && i.setIsSealed(e.block.isSealed), Promise.resolve(n(t.node, o.GetLatestBlockHeader, i)).then(function (e) {\n                      u = e;\n                    }));\n                    return r && r.then ? r.then(function () {}) : void 0;\n                  }();\n\n                  return c && c.then ? c.then(a) : a();\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case pe(e):\n            return P.sendGetBlockById ? P.sendGetBlockById(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (n) {\n                  e = n;\n                  var r = new m();\n                  return r.setId(Buffer.from(e.block.id, \"hex\")), Promise.resolve(Oe(t.node, o.GetBlockByID, r)).then(function (t) {\n                    var n = t.getBlock(),\n                        r = n.getCollectionGuaranteesList(),\n                        o = n.getBlockSealsList(),\n                        a = n.getSignaturesList(),\n                        i = Le();\n                    return i.tag = e.tag, i.block = {\n                      id: ze(n.getId_asU8()),\n                      parentId: ze(n.getParentId_asU8()),\n                      height: n.getHeight(),\n                      timestamp: n.getTimestamp(),\n                      collectionGuarantees: r.map(function (e) {\n                        return {\n                          collectionId: ze(e.getCollectionId_asU8()),\n                          signatures: e.getSignaturesList()\n                        };\n                      }),\n                      blockSeals: o.map(function (e) {\n                        return {\n                          blockId: ze(e.getBlockId_asU8()),\n                          executionReceiptId: ze(e.getExecutionReceiptId_asU8()),\n                          executionReceiptSignatures: e.getExecutionReceiptSignaturesList(),\n                          resultApprovalSignatures: e.getResultApprovalSignaturesList()\n                        };\n                      }),\n                      signatures: a\n                    }, i;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case he(e):\n            return P.sendGetBlockByHeight ? P.sendGetBlockByHeight(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                return Promise.resolve(e).then(function (n) {\n                  e = n;\n                  var r = new g();\n                  return r.setHeight(Number(e.block.height)), Promise.resolve(Oe(t.node, o.GetBlockByHeight, r)).then(function (t) {\n                    var n = t.getBlock(),\n                        r = n.getCollectionGuaranteesList(),\n                        o = n.getBlockSealsList(),\n                        a = n.getSignaturesList(),\n                        i = Le();\n                    return i.tag = e.tag, i.block = {\n                      id: qe(n.getId_asU8()),\n                      parentId: qe(n.getParentId_asU8()),\n                      height: n.getHeight(),\n                      timestamp: n.getTimestamp(),\n                      collectionGuarantees: r.map(function (e) {\n                        return {\n                          collectionId: qe(e.getCollectionId_asU8()),\n                          signatures: e.getSignaturesList()\n                        };\n                      }),\n                      blockSeals: o.map(function (e) {\n                        return {\n                          blockId: qe(e.getBlockId_asU8()),\n                          executionReceiptId: qe(e.getExecutionReceiptId_asU8()),\n                          executionReceiptSignatures: e.getExecutionReceiptSignaturesList(),\n                          resultApprovalSignatures: e.getResultApprovalSignaturesList()\n                        };\n                      }),\n                      signatures: a\n                    }, i;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case ke(e):\n            return P.sendGetCollection ? P.sendGetCollection(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                var n = t.unary || Oe;\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var a = new b();\n                  return a.setId(Buffer.from(e.collection.id, \"hex\")), Promise.resolve(n(t.node, o.GetCollectionByID, a)).then(function (t) {\n                    var n = t.getCollection(),\n                        r = Le();\n                    return r.tag = e.tag, r.collection = {\n                      id: Je(n.getId_asU8()),\n                      transactionIds: n.getTransactionIdsList().map(Je)\n                    }, r;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          case ve(e):\n            return P.sendPing ? P.sendPing(e, P) : function (e, t) {\n              void 0 === t && (t = {});\n\n              try {\n                var n = t.unary || Oe;\n                return Promise.resolve(e).then(function (r) {\n                  e = r;\n                  var a = new k();\n                  return Promise.resolve(n(t.node, o.Ping, a)).then(function (t) {\n                    var n = Le();\n                    return n.tag = e.tag, n;\n                  });\n                });\n              } catch (e) {\n                return Promise.reject(e);\n              }\n            }(e, P);\n\n          default:\n            return e;\n        }\n      });\n    },\n        B = P.node;\n\n    return Promise.resolve(B ? w(B) : Promise.resolve(t().get(\"accessNode.api\")).then(w));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction We(e) {\n  return void 0 === e && (e = null), Be([re, function (t) {\n    return t.block.isSealed = e, F(t);\n  }]);\n}\n\nfunction Ye(e) {\n  return Be([X, function (t) {\n    return t.account.addr = I(e), F(t);\n  }]);\n}\n\nvar Ve = function (e, t, n) {\n  try {\n    try {\n      return Promise.resolve(Number(e));\n    } catch (e) {\n      throw new Error(\"Decode Number Error : \" + n.join(\".\"));\n    }\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    $e = function (e) {\n  return Promise.resolve(e);\n},\n    Xe = function (e, t, n) {\n  try {\n    return Promise.resolve(e.fields.reduce(function (e, r) {\n      try {\n        return Promise.resolve(e).then(function (o) {\n          return e = o, Promise.resolve(et(r.value, t, [].concat(n, [r.name]))).then(function (t) {\n            return e[r.name] = t, e;\n          });\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }, Promise.resolve({}))).then(function (n) {\n      var r = e.id && Ze(t, e.id);\n      return r ? Promise.resolve(r(n)) : n;\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    Qe = {\n  UInt: Ve,\n  Int: Ve,\n  UInt8: Ve,\n  Int8: Ve,\n  UInt16: Ve,\n  Int16: Ve,\n  UInt32: Ve,\n  Int32: Ve,\n  UInt64: Ve,\n  Int64: Ve,\n  UInt128: Ve,\n  Int128: Ve,\n  UInt256: Ve,\n  Int256: Ve,\n  Word8: Ve,\n  Word16: Ve,\n  Word32: Ve,\n  Word64: Ve,\n  UFix64: $e,\n  Fix64: $e,\n  String: $e,\n  Character: $e,\n  Bool: $e,\n  Address: $e,\n  Void: function () {\n    return Promise.resolve(null);\n  },\n  Optional: function (e, t, n) {\n    return Promise.resolve(e ? et(e, t, n) : null);\n  },\n  Reference: function (e) {\n    try {\n      return Promise.resolve({\n        address: e.address,\n        type: e.type\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  Array: function (e, t, n) {\n    try {\n      return Promise.resolve(Promise.all(e.map(function (e) {\n        return new Promise(function (r) {\n          try {\n            return Promise.resolve(et(e, t, [].concat(n, [e.type]))).then(r);\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        });\n      })));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  Dictionary: function (e, t, n) {\n    try {\n      return Promise.resolve(e.reduce(function (e, r) {\n        try {\n          return Promise.resolve(e).then(function (o) {\n            return e = o, Promise.resolve(et(r.key, t, [].concat(n, [r.key]))).then(function (o) {\n              return Promise.resolve(et(r.value, t, [].concat(n, [r.key]))).then(function (t) {\n                return e[o] = t, e;\n              });\n            });\n          });\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }, Promise.resolve({})));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  Event: Xe,\n  Resource: Xe,\n  Struct: Xe\n},\n    Ze = function (e, t) {\n  var n = Object.keys(e).find(function (e) {\n    return /^\\/.*\\/$/.test(e) ? new RegExp(e.substring(1, e.length - 1)).test(t) : e === t;\n  });\n  return t && n && e[n];\n},\n    et = function (e, t, n) {\n  try {\n    var r = Ze(t, e.type);\n    if (!r) throw new Error(\"Undefined Decoder Error: \" + e.type + \"@\" + n.join(\".\"));\n    return Promise.resolve(r(e.value, t, n));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    tt = function (e, t, n) {\n  void 0 === t && (t = {}), void 0 === n && (n = []);\n  var r = T({}, Qe, t);\n  return Promise.resolve(et(e, r, n));\n},\n    nt = function (e, t) {\n  void 0 === t && (t = {});\n\n  try {\n    var n,\n        r = T({}, Qe, t),\n        o = e.encodedData ? (n = 1, Promise.resolve(tt(e.encodedData, r))) : e.transactionStatus ? (n = 1, Promise.resolve(Promise.all(e.transactionStatus.events.map(function (e) {\n      try {\n        var t = e.eventIndex,\n            n = e.transactionIndex,\n            o = e.transactionId,\n            a = e.type;\n        return Promise.resolve(tt(e.payload, r)).then(function (e) {\n          return {\n            type: a,\n            transactionId: o,\n            transactionIndex: n,\n            eventIndex: t,\n            data: e\n          };\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }))).then(function (t) {\n      return T({}, e.transactionStatus, {\n        events: t\n      });\n    })) : e.transaction ? (n = 1, e.transaction) : e.events ? (n = 1, Promise.resolve(Promise.all(e.events.map(function (e) {\n      try {\n        var t = e.eventIndex,\n            n = e.transactionIndex,\n            o = e.transactionId,\n            a = e.type,\n            i = e.blockTimestamp,\n            u = e.blockHeight,\n            c = e.blockId;\n        return Promise.resolve(tt(e.payload, r)).then(function (e) {\n          return {\n            blockId: c,\n            blockHeight: u,\n            blockTimestamp: i,\n            type: a,\n            transactionId: o,\n            transactionIndex: n,\n            eventIndex: t,\n            data: e\n          };\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    })))) : e.account ? (n = 1, e.account) : e.block ? (n = 1, e.block) : e.blockHeader ? (n = 1, e.blockHeader) : e.latestBlock ? (console.error(\"\\n          %c@onflow/decode Deprecation Notice\\n          ========================\\n\\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\\n\\n          =======================\\n        \".replace(/\\n\\s+/g, \"\\n\").trim(), \"font-weight:bold;font-family:monospace;\"), n = 1, e.latestBlock) : e.transactionId ? (n = 1, e.transactionId) : e.collection ? (n = 1, e.collection) : void 0;\n    return Promise.resolve(o && o.then ? o.then(function (e) {\n      return n ? e : null;\n    }) : n ? o : null);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction rt(e) {\n  return function (t) {\n    try {\n      return se(t) ? t.message.refBlock ? Promise.resolve(F(t)) : Promise.resolve(function (e) {\n        try {\n          var t;\n          return Promise.resolve(Be(U(), [We()])).then(function (n) {\n            return t = n, Promise.resolve(Me(t, e)).then(function (e) {\n              return t = e, Promise.resolve(nt(t)).then(function (e) {\n                return (t = e).id;\n              });\n            });\n          });\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }(e)).then(function (e) {\n        return t.message.refBlock = e, F(t);\n      }) : Promise.resolve(F(t));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nvar ot = function (n) {\n  try {\n    var r = function () {\n      if (se(n) || ce(n)) {\n        var r = function () {\n          return e(it(o), \"Cadence needs to be a string at this point.\"), Promise.resolve(t().where(/^0x/).then(function (e) {\n            return Object.entries(e).reduce(function (e, t) {\n              return e.replace(t[0], t[1]);\n            }, o);\n          })).then(function (e) {\n            n.message.cadence = e;\n          });\n        },\n            o = Te(n, \"ix.cadence\");\n\n        e(at(o) || it(o), \"Cadence needs to be a function or a string.\");\n\n        var a = function () {\n          if (at(o)) return Promise.resolve(o({})).then(function (e) {\n            o = e;\n          });\n        }();\n\n        return a && a.then ? a.then(r) : r();\n      }\n    }();\n\n    return Promise.resolve(r && r.then ? r.then(function () {\n      return n;\n    }) : n);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    at = function (e) {\n  return \"function\" == typeof e;\n},\n    it = function (e) {\n  return \"string\" == typeof e;\n},\n    ut = function (e) {\n  try {\n    if (se(e) || ce(e)) for (var t = 0, n = Object.entries(e.arguments); t < n.length; t++) {\n      var r = n[t];\n      e.arguments[r[0]].asArgument = st(r[1]);\n    }\n    return Promise.resolve(e);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    ct = function (e) {\n  return \"function\" == typeof e;\n};\n\nfunction st(t) {\n  return e(null != typeof t.xform, \"No type specified for argument: \" + t.value), ct(t.xform) ? t.xform(t.value) : ct(t.xform.asArgument) ? t.xform.asArgument(t.value) : void e(!1, \"Invalid Argument\", t);\n}\n\nvar lt,\n    ft = function (e) {\n  return pt(bt(kt(e)));\n},\n    dt = function (e) {\n  return pt(bt(It(e)));\n},\n    mt = function (e, t) {\n  return Buffer.from(e.padStart(2 * t, 0), \"hex\");\n},\n    gt = (lt = Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"), Buffer.from(lt.padEnd(64, 0), \"hex\")).toString(\"hex\"),\n    pt = function (e) {\n  return gt + e;\n},\n    ht = function (e) {\n  return mt(e, 8);\n},\n    vt = function (e) {\n  return Buffer.from(JSON.stringify(e), \"utf8\");\n},\n    yt = function (e) {\n  return Buffer.from(e, \"utf8\");\n},\n    bt = function (e) {\n  return B(e).toString(\"hex\");\n},\n    kt = function (e) {\n  return wt(e), [yt(e.cadence), e.arguments.map(vt), (t = e.refBlock, mt(t, 32)), e.computeLimit, ht(e.proposalKey.address), e.proposalKey.keyId, e.proposalKey.sequenceNum, ht(e.payer), e.authorizers.map(ht)];\n  var t;\n},\n    It = function (e) {\n  return Bt(e), [kt(e), St(e)];\n},\n    St = function (e) {\n  var t = Pt(e);\n  return e.payloadSigs.map(function (e) {\n    return {\n      signerIndex: t.get(e.address),\n      keyId: e.keyId,\n      sig: e.sig\n    };\n  }).sort(function (e, t) {\n    return e.signerIndex > t.signerIndex ? 1 : e.signerIndex < t.signerIndex ? -1 : e.keyId > t.keyId ? 1 : e.keyId < t.keyId ? -1 : void 0;\n  }).map(function (e) {\n    return [e.signerIndex, e.keyId, (t = e.sig, Buffer.from(t, \"hex\"))];\n    var t;\n  });\n},\n    Pt = function (e) {\n  var t = new Map(),\n      n = 0,\n      r = function (e) {\n    t.has(e) || (t.set(e, n), n++);\n  };\n\n  return r(e.proposalKey.address), r(e.payer), e.authorizers.forEach(r), t;\n},\n    wt = function (e) {\n  Nt.forEach(function (t) {\n    return _t(e, t);\n  }), jt.forEach(function (t) {\n    return _t(e.proposalKey, t, \"proposalKey\");\n  });\n},\n    Bt = function (e) {\n  Lt.forEach(function (t) {\n    return _t(e, t);\n  }), e.payloadSigs.forEach(function (e, t) {\n    Ot.forEach(function (n) {\n      return _t(e, n, \"payloadSigs\", t);\n    });\n  });\n},\n    At = function (e) {\n  return \"number\" == typeof e;\n},\n    Tt = function (e) {\n  return \"string\" == typeof e;\n},\n    xt = function (e) {\n  return null !== e && \"object\" == typeof e;\n},\n    Et = function (e) {\n  return xt(e) && e instanceof Array;\n},\n    Nt = [{\n  name: \"cadence\",\n  check: Tt\n}, {\n  name: \"arguments\",\n  check: Et\n}, {\n  name: \"refBlock\",\n  check: Tt,\n  defaultVal: \"0\"\n}, {\n  name: \"computeLimit\",\n  check: At\n}, {\n  name: \"proposalKey\",\n  check: xt\n}, {\n  name: \"payer\",\n  check: Tt\n}, {\n  name: \"authorizers\",\n  check: Et\n}],\n    jt = [{\n  name: \"address\",\n  check: Tt\n}, {\n  name: \"keyId\",\n  check: At\n}, {\n  name: \"sequenceNum\",\n  check: At\n}],\n    Lt = [{\n  name: \"payloadSigs\",\n  check: Et\n}],\n    Ot = [{\n  name: \"address\",\n  check: Tt\n}, {\n  name: \"keyId\",\n  check: At\n}, {\n  name: \"sig\",\n  check: Tt\n}],\n    _t = function (e, t, n, r) {\n  var o = t.name,\n      a = t.check,\n      i = t.defaultVal;\n  if (null == e[o] && null != i && (e[o] = i), null == e[o]) throw Ut(o, n, r);\n  if (!a(e[o])) throw Ct(o, n, r);\n},\n    Gt = function (e, t, n) {\n  return t ? null == n ? t + \".\" + e : t + \".\" + n + \".\" + e : e;\n},\n    Ut = function (e, t, n) {\n  return new Error(\"Missing field \" + Gt(e, t, n));\n},\n    Ct = function (e, t, n) {\n  return new Error(\"Invalid field \" + Gt(e, t, n));\n},\n    Dt = function (e) {\n  try {\n    var t = function () {\n      if (se(e)) return function (t, n) {\n        try {\n          var r = (o = Rt(e), a = ft(Ft(e)), Promise.resolve(Promise.all(o.map(Kt(e, a)))).then(function () {\n            var t = function (e) {\n              var t = new Set([e.payer]);\n              return Array.from(t);\n            }(e),\n                n = dt(T({}, Ft(e), {\n              payloadSigs: o.map(function (t) {\n                return {\n                  address: e.accounts[t].addr,\n                  keyId: e.accounts[t].keyId,\n                  sig: e.accounts[t].signature\n                };\n              })\n            }));\n\n            return Promise.resolve(Promise.all(t.map(Kt(e, n)))).then(function () {});\n          }));\n        } catch (e) {\n          return n(e);\n        }\n\n        var o, a;\n        return r && r.then ? r.then(void 0, n) : r;\n      }(0, function (t) {\n        throw console.error(\"Signatures\", t, {\n          ix: e\n        }), t;\n      });\n    }();\n\n    return Promise.resolve(t && t.then ? t.then(function (t) {\n      return e;\n    }) : e);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction Rt(e) {\n  var t = new Set(e.authorizations);\n  return t.add(e.proposer), t.delete(e.payer), Array.from(t);\n}\n\nfunction Kt(e, t) {\n  return function (n) {\n    try {\n      var r = e.accounts[n];\n      return null != r.signature ? Promise.resolve() : Promise.resolve(r.signingFunction(function (e, t, n) {\n        try {\n          return {\n            f_type: \"Signable\",\n            f_vsn: \"1.0.1\",\n            message: t,\n            addr: I(e.addr),\n            keyId: e.keyId,\n            roles: e.role,\n            cadence: n.message.cadence,\n            args: n.message.arguments.map(function (e) {\n              return n.arguments[e].asArgument;\n            }),\n            data: {},\n            interaction: n,\n            voucher: Ht(n)\n          };\n        } catch (e) {\n          throw console.error(\"buildSignable\", e), e;\n        }\n      }(r, t, e))).then(function (t) {\n        e.accounts[n].signature = t.signature;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nvar Ht = function (e) {\n  return {\n    cadence: e.message.cadence,\n    refBlock: e.message.refBlock || null,\n    computeLimit: e.message.computeLimit,\n    arguments: e.message.arguments.map(function (t) {\n      return e.arguments[t].asArgument;\n    }),\n    proposalKey: {\n      address: S(e.accounts[e.proposer].addr),\n      keyId: e.accounts[e.proposer].keyId,\n      sequenceNum: e.accounts[e.proposer].sequenceNum\n    },\n    payer: S(e.accounts[e.payer].addr),\n    authorizers: e.authorizations.map(function (t) {\n      return S(e.accounts[t].addr);\n    }).reduce(function (e, t) {\n      return e.find(function (e) {\n        return e === t;\n      }) ? e : [].concat(e, [t]);\n    }, []),\n    payloadSigs: Rt(e).map(function (t) {\n      return {\n        address: S(e.accounts[t].addr),\n        keyId: e.accounts[t].keyId,\n        sig: e.accounts[t].signature\n      };\n    })\n  };\n};\n\nfunction Ft(e) {\n  return {\n    cadence: e.message.cadence,\n    refBlock: e.message.refBlock || null,\n    computeLimit: e.message.computeLimit,\n    arguments: e.message.arguments.map(function (t) {\n      return e.arguments[t].asArgument;\n    }),\n    proposalKey: {\n      address: I(e.accounts[e.proposer].addr),\n      keyId: e.accounts[e.proposer].keyId,\n      sequenceNum: e.accounts[e.proposer].sequenceNum\n    },\n    payer: I(e.accounts[e.payer].addr),\n    authorizers: e.authorizations.map(function (t) {\n      return I(e.accounts[t].addr);\n    }).reduce(function (e, t) {\n      return e.find(function (e) {\n        return e === t;\n      }) ? e : [].concat(e, [t]);\n    }, [])\n  };\n}\n\nvar zt = \"undefined\" != typeof Symbol ? Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\")) : \"@@iterator\";\n\nfunction qt(e, t, n) {\n  if (!e.s) {\n    if (n instanceof Jt) {\n      if (!n.s) return void (n.o = qt.bind(null, e, t));\n      1 & t && (t = n.s), n = n.v;\n    }\n\n    if (n && n.then) return void n.then(qt.bind(null, e, t), qt.bind(null, e, 2));\n    e.s = t, e.v = n;\n    var r = e.o;\n    r && r(e);\n  }\n}\n\nvar Jt = function () {\n  function e() {}\n\n  return e.prototype.then = function (t, n) {\n    var r = new e(),\n        o = this.s;\n\n    if (o) {\n      var a = 1 & o ? t : n;\n\n      if (a) {\n        try {\n          qt(r, 1, a(this.v));\n        } catch (e) {\n          qt(r, 2, e);\n        }\n\n        return r;\n      }\n\n      return this;\n    }\n\n    return this.o = function (e) {\n      try {\n        var o = e.v;\n        1 & e.s ? qt(r, 1, t ? t(o) : o) : n ? qt(r, 1, n(o)) : qt(r, 2, o);\n      } catch (e) {\n        qt(r, 2, e);\n      }\n    }, r;\n  }, e;\n}();\n\nfunction Mt(e) {\n  return e instanceof Jt && 1 & e.s;\n}\n\nvar Wt = function (e) {\n  try {\n    var t = function () {\n      if (se(e)) return function (t, n) {\n        try {\n          var r = Promise.resolve(Yt(e, Object.values(e.accounts))).then(function () {\n            return Promise.resolve(Yt(e, Object.values(e.accounts))).then(function () {});\n          });\n        } catch (e) {\n          return n(e);\n        }\n\n        return r && r.then ? r.then(void 0, n) : r;\n      }(0, function (e) {\n        throw console.error(\"=== SAD PANDA ===\\n\\n\", e, \"\\n\\n=== SAD PANDA ===\"), e;\n      });\n    }();\n\n    return Promise.resolve(t && t.then ? t.then(function (t) {\n      return e;\n    }) : e);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    Yt = function t(n, r, o, a) {\n  void 0 === a && (a = 3);\n\n  try {\n    var i = function () {\n      o && (n.authorizations = n.authorizations.map(function (e) {\n        return e === o.tempId ? u : e;\n      }).reduce(function (e, t) {\n        return Array.isArray(t) ? [].concat(e, t) : [].concat(e, [t]);\n      }, []));\n    };\n\n    e(a, \"Account Resolve Recursion Limit Exceeded\", {\n      ix: n,\n      accounts: r\n    });\n\n    var u = [],\n        c = function (e, t, n) {\n      if (\"function\" == typeof e[zt]) {\n        var r,\n            o,\n            a,\n            i = e[zt]();\n\n        if (function e(n) {\n          try {\n            for (; !(r = i.next()).done;) if ((n = t(r.value)) && n.then) {\n              if (!Mt(n)) return void n.then(e, a || (a = qt.bind(null, o = new Jt(), 2)));\n              n = n.v;\n            }\n\n            o ? qt(o, 1, n) : o = n;\n          } catch (e) {\n            qt(o || (o = new Jt()), 2, e);\n          }\n        }(), i.return) {\n          var u = function (e) {\n            try {\n              r.done || i.return();\n            } catch (e) {}\n\n            return e;\n          };\n\n          if (o && o.then) return o.then(u, function (e) {\n            throw u(e);\n          });\n          u();\n        }\n\n        return o;\n      }\n\n      if (!(\"length\" in e)) throw new TypeError(\"Object is not iterable\");\n\n      for (var c = [], s = 0; s < e.length; s++) c.push(e[s]);\n\n      return function (e, t, n) {\n        var r,\n            o,\n            a = -1;\n        return function n(i) {\n          try {\n            for (; ++a < e.length;) if ((i = t(a)) && i.then) {\n              if (!Mt(i)) return void i.then(n, o || (o = qt.bind(null, r = new Jt(), 2)));\n              i = i.v;\n            }\n\n            r ? qt(r, 1, i) : r = i;\n          } catch (e) {\n            qt(r || (r = new Jt()), 2, e);\n          }\n        }(), r;\n      }(c, function (e) {\n        return t(c[e]);\n      });\n    }(r, function (e) {\n      function r() {\n        function r() {\n          i.tempId != e.tempId && delete n.accounts[i.tempId];\n        }\n\n        var c = function () {\n          if (Array.isArray(e)) return Promise.resolve(t(n, e, i, a - 1)).then(function () {});\n          n.accounts[e.tempId] = n.accounts[e.tempId] || e, n.accounts[e.tempId].role.proposer = n.accounts[e.tempId].role.proposer || e.role.proposer, n.accounts[e.tempId].role.payer = n.accounts[e.tempId].role.payer || e.role.payer, n.accounts[e.tempId].role.authorizer = n.accounts[e.tempId].role.authorizer || e.role.authorizer, n.accounts[e.tempId].role.proposer && n.proposer === i.tempId && (n.proposer = e.tempId), n.accounts[e.tempId].role.payer && n.payer === i.tempId && (n.payer = e.tempId), n.accounts[e.tempId].role.authorizer && (o ? u = [].concat(u, [e.tempId]) : n.authorizations = n.authorizations.map(function (t) {\n            return t === i.tempId ? e.tempId : t;\n          }));\n        }();\n\n        return c && c.then ? c.then(r) : r();\n      }\n\n      var i = o || e,\n          c = function () {\n        if (Vt(e.resolve)) return Promise.resolve(e.resolve(e, function (e, t) {\n          try {\n            return {\n              f_type: \"PreSignable\",\n              f_vsn: \"1.0.1\",\n              roles: e.role,\n              cadence: t.message.cadence,\n              args: t.message.arguments.map(function (e) {\n                return t.arguments[e].asArgument;\n              }),\n              data: {},\n              interaction: t,\n              voucher: Ht(t)\n            };\n          } catch (e) {\n            throw console.error(\"buildPreSignable\", e), e;\n          }\n        }(e, n))).then(function (t) {\n          e = t;\n        });\n      }();\n\n      return c && c.then ? c.then(r) : r();\n    });\n\n    return Promise.resolve(c && c.then ? c.then(i) : i());\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    Vt = function (e) {\n  return \"function\" == typeof e;\n},\n    $t = function (e) {\n  try {\n    var t = Te(e, \"ix.validators\", []);\n    return Promise.resolve(Be(e, t.map(function (e) {\n      return function (t) {\n        return e(t, {\n          Ok: F,\n          Bad: z\n        });\n      };\n    })));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    Xt = function (e) {\n  try {\n    for (var t = 0, n = Object.keys(e.accounts); t < n.length; t++) {\n      var r = n[t];\n      e.accounts[r].addr = I(e.accounts[r].addr);\n    }\n\n    return Promise.resolve(e);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    Qt = Be([ot, ut, Wt, function (e) {\n  try {\n    var t = function () {\n      if (se(e) && null == e.message.refBlock) return Promise.resolve(Me(je([We()])).then(nt)).then(function (t) {\n        e.message.refBlock = t.id;\n      });\n    }();\n\n    return Promise.resolve(t && t.then ? t.then(function () {\n      return e;\n    }) : e);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}, function (t) {\n  try {\n    var n = function () {\n      if (se(t)) {\n        var n = Object.values(t.accounts).find(function (e) {\n          return e.role.proposer;\n        });\n        e(n, \"Transactions require a proposer\");\n\n        var r = function () {\n          if (null == n.sequenceNum) return Promise.resolve(je([Ye(n.addr)])).then(function (e) {\n            return Promise.resolve(Me(e).then(nt).then(function (e) {\n              return e.keys;\n            }).then(function (e) {\n              return e.find(function (e) {\n                return e.index === n.keyId;\n              });\n            }).then(function (e) {\n              return e.sequenceNumber;\n            })).then(function (e) {\n              t.accounts[n.tempId].sequenceNum = e;\n            });\n          });\n        }();\n\n        if (r && r.then) return r.then(function () {});\n      }\n    }();\n\n    return Promise.resolve(n && n.then ? n.then(function () {\n      return t;\n    }) : t);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}, Dt, Xt, $t]),\n    Zt = function (e, n) {\n  void 0 === e && (e = []), void 0 === n && (n = {});\n\n  try {\n    return Promise.resolve(t().get(\"sdk.send\", n.send || Me)).then(function (r) {\n      return Promise.resolve(t().get(\"sdk.resolve\", n.resolve || Qt)).then(function (t) {\n        return Array.isArray(e) && (e = Be(U(), e)), Promise.resolve(t(e)).then(function (e) {\n          return r(e, n);\n        });\n      });\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    en = function (e) {\n  try {\n    return Promise.resolve(t().where(/^decoder\\./)).then(function (t) {\n      var n = Object.entries(t).map(function (e) {\n        var t = e[0],\n            n = e[1];\n        return [t = \"/\" + t.replace(/^decoder\\./, \"\") + \"$/\", n];\n      });\n      return nt(e, Object.fromEntries(n));\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    tn = function (e) {\n  var t, n;\n\n  function r(t) {\n    var n,\n        r = (\"\\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: \" + t + \". \\n        Please ensure the address: \" + t + \" is intended to sign the given transaction as specified by the transaction signable.\\n      \").trim();\n    return (n = e.call(this, r) || this).name = \"Unable To Determine Message Encoding For Signer Addresss\", n;\n  }\n\n  return n = e, (t = r).prototype = Object.create(n.prototype), t.prototype.constructor = t, t.__proto__ = n, r;\n}(L(Error)),\n    nn = function (e, t) {\n  var n,\n      r,\n      o = (n = e.voucher, (r = new Set(n.authorizers)).add(n.proposalKey.address), r.delete(n.payer), Array.from(r).map(S)),\n      a = function (e) {\n    var t = new Set([e.payer]);\n    return Array.from(t).map(S);\n  }(e.voucher),\n      i = o.includes(S(t)),\n      u = a.includes(S(t));\n\n  if (!i && !u) throw new tn(t);\n  var c = {\n    cadence: e.voucher.cadence,\n    refBlock: e.voucher.refBlock,\n    computeLimit: e.voucher.computeLimit,\n    arguments: e.voucher.arguments,\n    proposalKey: T({}, e.voucher.proposalKey, {\n      address: I(e.voucher.proposalKey.address)\n    }),\n    payer: I(e.voucher.payer),\n    authorizers: e.voucher.authorizers.map(I),\n    payloadSigs: e.voucher.payloadSigs.map(function (e) {\n      return T({}, e, {\n        address: I(e.address)\n      });\n    })\n  };\n  return i ? ft(c) : dt(c);\n};\n\nfunction rn() {\n  var e = [].slice.call(arguments),\n      t = e[1] || (\"object\" == typeof e[0] ? e[0] : void 0),\n      n = \"boolean\" == typeof e[0] ? e[0] : void 0;\n  return \"object\" == typeof e[0] && console.warn(\"\\n      %cFCL/SDK Deprecation Notice\\n      ============================\\n  \\n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\\n  \\n      ============================\\n    \", \"font-weight:bold;font-family:monospace;\"), Zt([We(n)], t).then(nt);\n}\n\nfunction on(e, t) {\n  return Zt([Ye(e)], t).then(nt);\n}\n\nfunction an(e) {\n  return void 0 === e && (e = []), Be(e.map(function (e) {\n    return J(e, {\n      role: \"authorizer\"\n    });\n  }));\n}\n\nfunction un(e, t, n, r) {\n  return {\n    addr: e,\n    signingFunction: t,\n    keyId: n,\n    sequenceNum: r\n  };\n}\n\nfunction cn(e) {\n  return Ee(\"ix.validators\", function (t) {\n    return Array.isArray(t) ? t.push(e) : [e];\n  });\n}\n\nfunction sn(e) {\n  return Be([function (t) {\n    return t.block.height = e, t;\n  }, cn(function (e) {\n    if (\"boolean\" == typeof e.block.isSealed) throw new Error(\"Unable to specify both block height and isSealed.\");\n    if (e.block.id) throw new Error(\"Unable to specify both block height and block id.\");\n    return e;\n  })]);\n}\n\nfunction ln(e) {\n  return Be([function (t) {\n    return t.block.id = e, F(t);\n  }, cn(function (e, t) {\n    var n = t.Ok,\n        r = t.Bad;\n    return de(e) ? r(e, \"Unable to specify a block id with a Get Account interaction.\") : \"boolean\" == typeof e.block.isSealed ? r(e, \"Unable to specify both block id and isSealed.\") : e.block.height ? r(e, \"Unable to specify both block id and block height.\") : n(e);\n  })]);\n}\n\nfunction fn(e, t, n) {\n  return void 0 === t && void 0 === n || console.warn(\"\\n      %cFCL/SDK Deprecation Notice\\n      ============================\\n  \\n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\\n  \\n      ============================\\n    \", \"font-weight:bold;font-family:monospace;\"), Be([Q, function (r) {\n    return r.events.eventType = e, r.events.start = t, r.events.end = n, F(r);\n  }]);\n}\n\nfunction dn(e, t, n) {\n  return Be([Q, function (r) {\n    return r.events.eventType = e, r.events.start = t, r.events.end = n, F(r);\n  }]);\n}\n\nfunction mn(e, t) {\n  return void 0 === t && (t = []), Be([Q, function (n) {\n    return n.events.eventType = e, n.events.blockIds = t, F(n);\n  }]);\n}\n\nfunction gn(e) {\n  return void 0 === e && (e = null), Be([oe, function (t) {\n    return t.block.isSealed = e, F(t);\n  }]);\n}\n\nfunction pn(e) {\n  return void 0 === e && (e = !1), console.warn(\"\\n    %cFCL/SDK Deprecation Notice\\n    ============================\\n\\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\\n\\n    ============================\\n  \", \"font-weight:bold;font-family:monospace;\"), Be([Z, function (t) {\n    return t.block.isSealed = e, F(t);\n  }]);\n}\n\nfunction hn(e) {\n  return console.warn(\"\\n    %cFCL/SDK Deprecation Notice\\n    ============================\\n\\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\\n\\n    ============================\\n  \", \"font-weight:bold;font-family:monospace;\"), Be([ee, function (t) {\n    return t.block.ids = [e], F(t);\n  }]);\n}\n\nfunction vn(e) {\n  return console.warn(\"\\n    %cFCL/SDK Deprecation Notice\\n    ============================\\n\\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\\n\\n    ============================\\n  \", \"font-weight:bold;font-family:monospace;\"), Be([te, function (t) {\n    return t.block.height = e, F(t);\n  }]);\n}\n\nfunction yn(e) {\n  return void 0 === e && (e = null), Be([ae, function (t) {\n    return t.collection.id = e, t;\n  }]);\n}\n\nfunction bn(e) {\n  return Be([V, function (t) {\n    return t.transaction.id = e, F(t);\n  }]);\n}\n\nfunction kn(e) {\n  return Be([$, function (t) {\n    return t.transaction.id = e, F(t);\n  }]);\n}\n\nfunction In(e) {\n  return function (t) {\n    return t.message.computeLimit = e, t;\n  };\n}\n\nfunction Sn(e) {\n  return void 0 === e && (e = []), Be(e.map(M));\n}\n\nfunction Pn(e, t) {\n  return {\n    value: e,\n    xform: t\n  };\n}\n\nvar wn = function (e) {\n  try {\n    return Promise.resolve(J(e, {\n      role: \"proposer\"\n    }));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n},\n    Bn = function (e) {\n  try {\n    return Promise.resolve(J(e, {\n      role: \"payer\"\n    }));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction An() {\n  return ne;\n}\n\nfunction Tn(e) {\n  return Be([function (t) {\n    return t.message.refBlock = e, F(t);\n  }]);\n}\n\nfunction xn() {\n  return Be([W, xe(\"ix.cadence\", A.apply(void 0, [].slice.call(arguments)))]);\n}\n\nvar En = [];\n\nfunction Nn() {\n  return Be([Y, xe(\"ix.cadence\", A.apply(void 0, [].slice.call(arguments))), function (e) {\n    return e.message.computeLimit = e.message.computeLimit || 10, e.message.refBlock = e.message.refBlock || null, e.authorizations = e.authorizations || En, F(e);\n  }]);\n}\n\nfunction jn() {\n  var e = [].slice.call(arguments);\n\n  if (e.length > 1) {\n    var t = e,\n        n = t[0],\n        r = t[1];\n    return jn(function (e, t) {\n      var o = t.Bad;\n      return n ? (0, t.Ok)(e) : o(e, r);\n    });\n  }\n\n  var o = e[0];\n  return function (e) {\n    return o(e, {\n      Ok: F,\n      Bad: z\n    });\n  };\n}\n\nvar Ln = function (e) {\n  var t = e.node;\n  return function (e) {\n    try {\n      return se(e) ? e.accounts[e.proposer].sequenceNum ? Promise.resolve(F(e)) : Promise.resolve(je([Ye(e.accounts[e.proposer].addr)])).then(function (n) {\n        return Promise.resolve(Me(n, {\n          node: t\n        })).then(function (t) {\n          return Promise.resolve(nt(t)).then(function (t) {\n            return e.accounts[e.proposer].sequenceNum = t.keys[e.accounts[e.proposer].keyId].sequenceNumber, F(e);\n          });\n        });\n      }) : Promise.resolve(F(e));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n},\n    On = function (e) {\n  return t = {\n    name: \"params\",\n    transitionsPath: \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\"\n  }, void console.error(\"\\n    %cFCL/SDK Deprecation Notice\\n    ============================\\n    The \" + t.name + \" builder has been removed from the Flow JS-SDK/FCL.\\n    You can learn more (including a guide on common transition paths) here: \" + t.transitionsPath + \"\\n    ============================\\n  \", \"font-weight:bold;font-family:monospace;\");\n  var t;\n},\n    _n = function (e) {\n  return t = {\n    name: \"param\",\n    transitionsPath: \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\"\n  }, void console.warn(\"\\n    %cFCL/SDK Deprecation Notice\\n    ============================\\n    The \" + t.name + \" builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\\n    You can learn more (including a guide on common transition paths) here: \" + t.transitionsPath + \"\\n    ============================\\n  \", \"font-weight:bold;font-family:monospace;\");\n  var t;\n};\n\nexport { on as account, Pn as arg, Sn as args, sn as atBlockHeight, ln as atBlockId, un as authorization, an as authorizations, je as build, Ht as createSignableVoucher, en as decode, Ne as destroy, nn as encodeMessageFromSignable, Te as get, Ye as getAccount, We as getBlock, vn as getBlockByHeight, hn as getBlockById, gn as getBlockHeader, yn as getCollection, fn as getEvents, dn as getEventsAtBlockHeightRange, mn as getEventsAtBlockIds, pn as getLatestBlock, kn as getTransaction, bn as getTransactionStatus, U as interaction, jn as invariant, Se as isBad, de as isGetAccount, ye as isGetBlock, he as isGetBlockByHeight, pe as isGetBlockById, be as isGetBlockHeader, ke as isGetCollection, me as isGetEvents, ge as isGetLatestBlock, fe as isGetTransaction, le as isGetTransactionStatus, Ie as isOk, ve as isPing, ce as isScript, se as isTransaction, ue as isUnknown, rn as latestBlock, In as limit, _n as param, On as params, Bn as payer, An as ping, Be as pipe, wn as proposer, xe as put, Tn as ref, Qt as resolve, Wt as resolveAccounts, ut as resolveArguments, ot as resolveCadence, Xt as resolveFinalNormalization, Ln as resolveProposerSequenceNumber, rt as resolveRefBlockId, Dt as resolveSignatures, $t as resolveValidators, xn as script, Zt as send, Nn as transaction, Ee as update, cn as validator, Pe as why };","map":{"version":3,"sources":["../src/interaction/interaction.js","../src/build/build.js","../src/response/response.js","../src/send/unary.js","../src/send/send-transaction.js","../src/send/send-get-transaction.js","../src/send/send-execute-script.js","../src/send/send-get-account.js","../src/send/send-get-events.js","../src/send/send-get-block.js","../src/send/send-get-block-header.js","../src/send/send-get-latest-block.js","../src/send/send-get-block-by-id.js","../src/send/send-get-block-by-height.js","../src/send/send-get-collection.js","../src/send/sdk-send.js","../src/send/send-get-transaction-status.js","../src/send/send-ping.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-ref-block-id.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/encode/encode.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-accounts.js","../src/resolve/resolve-validators.js","../src/resolve/resolve-final-normalization.js","../src/resolve/resolve.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/wallet-utils/encode-signable.js","../src/latest-block/latest-block.js","../src/account/account.js","../src/build/build-authorizations.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-latest-block.js","../src/build/build-get-block-by-id.js","../src/build/build-get-block-by-height.js","../src/build/build-get-collection.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-limit.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-invariant.js","../src/resolve/resolve-proposer-sequence-number.js","../src/sdk.js","../src/utils/deprecate.js"],"names":["IX","KEYS","Set","Object","keys","JSON","parse","interaction","CHARS","split","randChar","Math","random","length","uuid","Array","from","join","d","isArray","isNull","ix","isNumber","hasOwnProperty","Ok","status","Bad","reason","makeIx","tag","wat","prepAccount","acct","opts","invariant","role","ACCOUNT","tempId","resolve","accounts","authorizations","push","makeArgument","message","arguments","value","arg","asArgument","xform","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","makeGetBlock","makeGetBlockHeader","makeGetCollection","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isGetBlock","isGetBlockHeader","isGetCollection","isOk","isBad","why","key","has","Error","recPipe","fns","hardMode","hd","rest","cur","isInteraction","e","pipe","arg1","arg2","identity","v","get","fallback","assigns","put","update","fn","destroy","body","recover","result","then","build","response","grpc","setDefaultTransport","NodeHttpTransport","unary","host","method","request","metadataFromConfig","config","Promise","reject","metadata","Metadata","onEnd","statusMessage","Code","OK","u8","Buffer","toString","padStart","pad","script","hexBuffer","hex","addressBuffer","addr","stringify","defaultUnary","tx","Transaction","setScript","scriptBuffer","cadence","setGasLimit","computeLimit","setReferenceBlockId","refBlock","setPayer","sansPrefix","payer","forEach","addArguments","argumentBuffer","map","reduce","prev","current","find","item","addAuthorizers","proposalKey","ProposalKey","setAddress","proposer","setKeyId","keyId","setSequenceNumber","sequenceNum","setProposalKey","values","signature","sig","Signature","setSignature","addPayloadSignatures","error","console","addEnvelopeSignatures","req","SendTransactionRequest","setTransaction","t1","Date","now","res","node","AccessAPI","SendTransaction","t2","ret","transactionId","getId_asU8","window","dispatchEvent","CustomEvent","detail","txId","delta","u8ToHex","GetTransactionRequest","setId","transaction","id","GetTransaction","address","getAddress_asU8","getKeyId","sequenceNumber","getSequenceNumber","unwrapSignature","getSignature_asU8","getTransaction","getScript_asU8","args","getArgumentsList","referenceBlockId","getReferenceBlockId_asU8","gasLimit","getGasLimit","getProposalKey","getPayer_asU8","authorizers","getAuthorizersList","payloadSignatures","getPayloadSignaturesList","envelopeSignatures","getEnvelopeSignaturesList","block","ExecuteScriptAtBlockIDRequest","setBlockId","code","ExecuteScriptAtBlockID","height","ExecuteScriptAtBlockHeightRequest","setBlockHeight","Number","ExecuteScriptAtBlockHeight","ExecuteScriptAtLatestBlockRequest","ExecuteScriptAtLatestBlock","encodedData","getValue_asU8","GetAccountAtBlockHeightRequest","GetAccountAtLatestBlockRequest","account","GetAccountAtBlockHeight","GetAccountAtLatestBlock","getAccount","contractsMap","contracts","getContractsMap","getEntryList","acc","contract","UInt8Array","withPrefix","balance","getBalance","getCode_asU8","getKeysList","index","publicKey","getIndex","getPublicKey_asU8","signAlgo","getSignAlgo","hashAlgo","getHashAlgo","weight","getWeight","revoked","getRevoked","events","start","GetEventsForHeightRangeRequest","GetEventsForBlockIDsRequest","setType","eventType","setStartHeight","setEndHeight","end","GetEventsForHeightRange","blockIds","addBlockIds","GetEventsForBlockIDs","results","getResultsList","blocks","blockId","getBlockId_asU8","blockHeight","getBlockHeight","blockTimestamp","getBlockTimestamp","toDate","toISOString","getEventsList","type","event","getType","getTransactionId_asU8","transactionIndex","getTransactionIndex","eventIndex","getEventIndex","payload","getPayload_asU8","GetBlockByIDRequest","GetBlockByID","GetBlockByHeightRequest","setHeight","GetBlockByHeight","GetLatestBlockRequest","isSealed","setIsSealed","GetLatestBlock","getBlock","collectionGuarantees","getCollectionGuaranteesList","blockSeals","getBlockSealsList","signatures","getSignaturesList","parentId","getParentId_asU8","getHeight","timestamp","getTimestamp","collectionId","collectionGuarantee","getCollectionId_asU8","blockSeal","executionReceiptId","getExecutionReceiptId_asU8","executionReceiptSignatures","getExecutionReceiptSignaturesList","resultApprovalSignatures","getResultApprovalSignaturesList","GetBlockHeaderByIDRequest","GetBlockHeaderByID","GetBlockHeaderByHeightRequest","GetBlockHeaderByHeight","GetLatestBlockHeaderRequest","GetLatestBlockHeader","blockHeader","replace","trim","latestBlock","GetCollectionByIDRequest","collection","GetCollectionByID","getCollection","transactionIds","getTransactionIdsList","send","sendTransaction","sendGetTransactionStatus","sendGetTransaction","sendExecuteScript","sendGetAccount","sendGetEvents","sendGetLatestBlock","sendGetBlock","sendGetBlockHeader","sendGetBlockById","sendGetBlockByHeight","sendGetCollection","sendPing","GetTransactionResult","transactionStatus","getStatus","statusCode","getStatusCode","errorMessage","getErrorMessage","PingRequest","Ping","decodeNumber","num","_","stack","decodeImplicit","i","optional","decoders","recurseDecode","array","all","dictionary","decodeComposite","composite","decoded","fields","name","decoder","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","Reference","Dictionary","Event","Resource","Struct","lookup","found","test","RegExp","substring","decodeInstructions","decode","customDecoders","decodeResponse","data","_exit2","resolveRefBlockId","getRefId","isFn","isString","resolveCadence","where","entries","cast","resolveArguments","encodeTransactionPayload","prependTransactionDomainTag","rlpEncode","preparePayload","encodeTransactionEnvelope","prepareEnvelope","padEnd","leftPaddedHexBuffer","TRANSACTION_DOMAIN_TAG","argumentToString","encode","validatePayload","validateEnvelope","preparePayloadSignatures","signers","collectSigners","payloadSigs","signerIndex","sort","a","b","Map","addSigner","set","payloadFields","checkField","field","proposalKeyFields","envelopeFields","payloadSigFields","isObject","check","defaultVal","obj","base","missingFieldError","invalidFieldError","printFieldName","resolveSignatures","insideSigners","findInsideSigners","insidePayload","encodeInsideMessage","prepForEncoding","fetchSignature","outsideSigners","findOutsideSigners","outsidePayload","encodeOutsideMessage","inside","add","outside","signingFunction","buildSignable","createSignableVoucher","cid","f_type","f_vsn","roles","voucher","_Pact","prototype","onFulfilled","onRejected","state","this","s","callback","_settle","o","_this","collectAccounts","last","depth","ax","old","buildPreSignable","pact","authorizer","bind","observer","thenable","curr","resolveAccounts","_cycle","_isSettledPact","Symbol","iterator","target","step","next","done","_fixup","TypeError","resolveValidators","validators","cb","resolveFinalNormalization","_send$then","sendFunction","defaultSend","resolveFunction","defaultResolve","decodersFromConfig","pattern","fromEntries","envelope","UnableToDetermineMessageEncodingTypeForSignerAddress","signerAddress","msg","encodeMessageFromSignable","signable","payloadSigners","envelopeSigners","findEnvelopeSigners","isPayloadSigner","includes","isEnvelopeSigner","ps","undefined","warn","authz","authorization","validator","atBlockHeight","atBlockId","getEvents","getEventsAtBlockHeightRange","getEventsAtBlockIds","getBlockHeader","getLatestBlock","getBlockById","ids","getBlockByHeight","getTransactionStatus","limit","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","predicate","resolveProposerSequenceNumber","params","transitionsPath","param"],"mappings":"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","sourcesContent":["import {invariant} from \"@onflow/util-invariant\"\n\nexport const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const GET_LATEST_BLOCK /*              */ = \"GET_LATEST_BLOCK\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK_BY_ID /*               */ = \"GET_BLOCK_BY_ID\"\nexport const GET_BLOCK_BY_HEIGHT /*           */ = \"GET_BLOCK_BY_HEIGHT\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\nexport const GET_COLLECTION /*                */ = \"GET_COLLECTION\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /*  */ = \"ACCOUNT\"\nexport const PARAM /*    */ = \"PARAM\"\nexport const ARGUMENT /* */ = \"ARGUMENT\"\n\nexport const AUTHORIZER /* */ = \"authorizer\"\nexport const PAYER /*      */ = \"payer\"\nexport const PROPOSER /*   */ = \"proposer\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computeLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  },\n  \"collection\": {\n    \"id\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\nexport const isNumber = d => typeof d === \"number\"\nexport const isArray = d => Array.isArray(d)\nexport const isObj = d => d !== null && typeof d === \"object\"\nexport const isNull = d => d == null\nexport const isFn = d => typeof d === \"function\"\n\nexport const isInteraction = ix => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = ix => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = wat => ix => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nexport const prepAccount = (acct, opts = {}) => ix => {\n  invariant(\n    typeof acct === \"function\" || typeof acct === \"object\",\n    \"prepAccount must be passed an authorization function or an account object\"\n  )\n  invariant(opts.role != null, \"Account must have a role\")\n\n  const ACCOUNT = JSON.parse(ACCT)\n  const role = opts.role\n  const tempId = uuid()\n\n  acct = typeof acct === \"function\" ? {resolve: acct} : acct\n\n  ix.accounts[tempId] = {\n    ...ACCOUNT,\n    tempId,\n    ...acct,\n    role: {\n      ...ACCOUNT.role,\n      ...(typeof acct.role === \"object\" ? acct.role : {}),\n      [role]: true,\n    },\n  }\n\n  if (role === AUTHORIZER) {\n    ix.authorizations.push(tempId)\n  } else {\n    ix[role] = tempId\n  }\n\n  return ix\n}\n\nexport const makeArgument = arg => ix => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*          */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*            */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*        */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\nexport const makeGetCollection /*           */ = makeIx(GET_COLLECTION)\n\nconst is = wat => ix => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*          */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*            */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*        */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\nexport const isGetCollection /*           */ = is(GET_COLLECTION)\n\nexport const isOk /*  */ = ix => ix.status === OK\nexport const isBad /* */ = ix => ix.status === BAD\nexport const why /*   */ = ix => ix.reason\n\nexport const isAccount /*  */ = account => account.kind === ACCOUNT\nexport const isParam /*    */ = param => param.kind === PARAM\nexport const isArgument /* */ = argument => argument.kind === ARGUMENT\n\nconst hardMode = ix => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return d => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = v => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => ix => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => ix => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = key => ix => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE = `{\n    \"tag\":null,\n    \"transaction\":null,\n    \"transactionStatus\":null,\n    \"transactionId\":null,\n    \"encodedData\":null,\n    \"events\":null,\n    \"account\":null,\n    \"block\":null,\n    \"blockHeader\":null,\n    \"latestBlock\":null,\n    \"collection\":null\n}`\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {grpc} from \"@improbable-eng/grpc-web\"\nimport {NodeHttpTransport} from \"@improbable-eng/grpc-web-node-http-transport\"\nimport {config} from \"@onflow/config\"\n\ngrpc.setDefaultTransport(NodeHttpTransport())\n\nexport async function unary(host, method, request) {\n  const metadataFromConfig = await config().get(\"grpc.metadata\", {})\n  return new Promise((resolve, reject) => {\n    grpc.unary(method, {\n      request: request,\n      host: host,\n      metadata: new grpc.Metadata(metadataFromConfig),\n      onEnd: ({status, statusMessage, message}) => {\n        if (status === grpc.Code.OK) {\n          resolve(message)\n        } else {\n          reject(new Error(statusMessage))\n        }\n      },\n    })\n  })\n}\n","import {AccessAPI, Transaction, SendTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nexport async function sendTransaction(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const tx = new Transaction()\n  tx.setScript(scriptBuffer(ix.message.cadence))\n  tx.setGasLimit(ix.message.computeLimit)\n  tx.setReferenceBlockId(\n    ix.message.refBlock ? hexBuffer(ix.message.refBlock) : null\n  )\n  tx.setPayer(addressBuffer(sansPrefix(ix.accounts[ix.payer].addr)))\n  ix.message.arguments.forEach(arg =>\n    tx.addArguments(argumentBuffer(ix.arguments[arg].asArgument))\n  )\n  ix.authorizations\n    .map(tempId => ix.accounts[tempId].addr)\n    .reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current]\n    }, [])\n    .forEach(addr => tx.addAuthorizers(addressBuffer(sansPrefix(addr))))\n\n  const proposalKey = new Transaction.ProposalKey()\n  proposalKey.setAddress(\n    addressBuffer(sansPrefix(ix.accounts[ix.proposer].addr))\n  )\n  proposalKey.setKeyId(ix.accounts[ix.proposer].keyId)\n  proposalKey.setSequenceNumber(ix.accounts[ix.proposer].sequenceNum)\n\n  tx.setProposalKey(proposalKey)\n\n  // Apply Non Payer Signatures to Payload Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addPayloadSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying payload signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addEnvelopeSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying envelope signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  const req = new SendTransactionRequest()\n  req.setTransaction(tx)\n\n  var t1 = Date.now()\n  const res = await unary(opts.node, AccessAPI.SendTransaction, req)\n  var t2 = Date.now()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionId = u8ToHex(res.getId_asU8())\n\n  if (typeof window !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransaction(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransaction, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const unwrapKey = key => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    sequenceNumber: key.getSequenceNumber()\n  })\n\n  const unwrapSignature = sig => ({\n    address: u8ToHex(sig.getAddress_asU8()),\n    keyId: sig.getKeyId(),\n    signature: u8ToHex(sig.getSignature_asU8())\n  })\n\n  let transaction = res.getTransaction()\n  ret.transaction = {\n      script: Buffer.from(transaction.getScript_asU8()).toString(\"utf8\"),\n      args: (transaction.getArgumentsList()).map(arg => JSON.parse(Buffer.from(arg).toString(\"utf8\"))),\n      referenceBlockId: u8ToHex(transaction.getReferenceBlockId_asU8()),\n      gasLimit: transaction.getGasLimit(),\n      proposalKey: unwrapKey(transaction.getProposalKey()),\n      payer: u8ToHex(transaction.getPayer_asU8()),\n      authorizers: (transaction.getAuthorizersList()).map(u8ToHex),\n      payloadSignatures: (transaction.getPayloadSignaturesList()).map(unwrapSignature),\n      envelopeSignatures: (transaction.getEnvelopeSignaturesList()).map(unwrapSignature)\n  }\n\n  return ret\n}\n","import {ExecuteScriptAtLatestBlockRequest, ExecuteScriptAtBlockIDRequest, ExecuteScriptAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendExecuteScript(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new ExecuteScriptAtBlockIDRequest()\n    \n    req.setBlockId(hexBuffer(ix.block.id))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockID, req)\n  } else if (ix.block.height) {\n    req = new ExecuteScriptAtBlockHeightRequest()\n\n    req.setBlockHeight(Number(ix.block.height))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockHeight, req) \n  } else {\n    req = new ExecuteScriptAtLatestBlockRequest()\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtLatestBlock, req)\n  }\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.encodedData = JSON.parse(Buffer.from(res.getValue_asU8()).toString(\"utf8\"))\n\n  return ret\n}\n","import {GetAccountAtLatestBlockRequest, GetAccountAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nexport async function sendGetAccount(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = ix.block.height ? new GetAccountAtBlockHeightRequest() : new GetAccountAtLatestBlockRequest()\n  if (ix.block.height) req.setBlockHeight(Number(ix.block.height))\n  req.setAddress(addressBuffer(sansPrefix(ix.account.addr)))\n\n  const res = await unary(opts.node, ix.block.height ? AccessAPI.GetAccountAtBlockHeight : AccessAPI.GetAccountAtLatestBlock, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const account = res.getAccount()\n\n  let contractsMap;\n  const contracts = (contractsMap = account.getContractsMap()) ? contractsMap.getEntryList().reduce((acc, contract) => ({\n    ...acc,\n    [contract[0]]: Buffer.from(contract[1] || new UInt8Array()).toString(\"utf8\")\n  }), {}) : {}\n\n  ret.account = {\n    address: withPrefix(u8ToHex(account.getAddress_asU8())),\n    balance: account.getBalance(),\n    code: Buffer.from(account.getCode_asU8() || new UInt8Array()).toString(\"utf8\"),\n    contracts,\n    keys: account.getKeysList().map(publicKey => ({\n      index: publicKey.getIndex(),\n      publicKey: u8ToHex(publicKey.getPublicKey_asU8()),\n      signAlgo: publicKey.getSignAlgo(),\n      hashAlgo: publicKey.getHashAlgo(),\n      weight: publicKey.getWeight(),\n      sequenceNumber: publicKey.getSequenceNumber(),\n      revoked: publicKey.getRevoked(),\n    })),\n  }\n\n  return ret\n}\n","import {GetEventsForHeightRangeRequest, GetEventsForBlockIDsRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetEvents(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n  \n  ix = await ix\n \n  let res\n  const req = ix.events.start ? new GetEventsForHeightRangeRequest() : new GetEventsForBlockIDsRequest()\n  req.setType(ix.events.eventType)\n  \n  if (ix.events.start) {\n    req.setStartHeight(Number(ix.events.start))\n    req.setEndHeight(Number(ix.events.end))\n\n    res = await unary(opts.node, AccessAPI.GetEventsForHeightRange, req)\n  } else {\n    ix.events.blockIds.forEach(id =>\n      req.addBlockIds(hexBuffer(id))\n    )\n\n    res = await unary(opts.node, AccessAPI.GetEventsForBlockIDs, req)\n  }\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const results = res.getResultsList()\n  ret.events = results.reduce((blocks, result) => {\n    const blockId = u8ToHex(result.getBlockId_asU8())\n    const blockHeight = result.getBlockHeight()\n    const blockTimestamp = result.getBlockTimestamp().toDate().toISOString()\n    const events = result.getEventsList()\n    events.forEach(event => {\n      blocks.push({\n        blockId,\n        blockHeight,\n        blockTimestamp,\n        type: event.getType(),\n        transactionId: u8ToHex(event.getTransactionId_asU8()),\n        transactionIndex: event.getTransactionIndex(),\n        eventIndex: event.getEventIndex(),\n        payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n      })\n    })\n    return blocks\n  }, [])\n\n  return ret\n}\n","import {GetBlockByIDRequest, GetBlockByHeightRequest, GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlock(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new GetBlockByIDRequest()\n    req.setId(hexBuffer(ix.block.id))\n\n    res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n  } else if (ix.block.height) {\n    req = new GetBlockByHeightRequest()\n    req.setHeight(Number(ix.block.height))\n    \n    res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n  } else {\n    req = new GetLatestBlockRequest()\n\n    if (ix.block && ix.block.isSealed) {\n      req.setIsSealed(ix.block.isSealed)\n    }\n\n    res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n  }\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = (block.getSignaturesList()).map(u8ToHex)\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp().toDate().toISOString(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: (collectionGuarantee.getSignaturesList()).map(u8ToHex),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: (blockSeal.getExecutionReceiptSignaturesList()).map(u8ToHex),\n      resultApprovalSignatures: (blockSeal.getResultApprovalSignaturesList()).map(u8ToHex),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetLatestBlockHeaderRequest, GetBlockHeaderByIDRequest, GetBlockHeaderByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockHeader(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new GetBlockHeaderByIDRequest()\n    req.setId(hexBuffer(ix.block.id))\n\n    res = await unary(opts.node, AccessAPI.GetBlockHeaderByID, req)\n  } else if (ix.block.height) {\n    req = new GetBlockHeaderByHeightRequest()\n    req.setHeight(Number(ix.block.height))\n\n    res = await unary(opts.node, AccessAPI.GetBlockHeaderByHeight, req)\n  } else {\n    req = new GetLatestBlockHeaderRequest()\n\n    if (ix.block && ix.block.isSealed) {\n      req.setIsSealed(ix.block.isSealed)\n    }\n\n    res = await unary(opts.node, AccessAPI.GetLatestBlockHeader, req)\n  }\n\n  const blockHeader = res.getBlock()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.blockHeader = {\n    id: u8ToHex(blockHeader.getId_asU8()),\n    parentId: u8ToHex(blockHeader.getParentId_asU8()),\n    height: blockHeader.getHeight(),\n    timestamp: blockHeader.getTimestamp().toDate().toISOString(),\n  }\n\n  return ret\n}\n","import {GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nconst latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport async function sendGetLatestBlock(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetLatestBlockRequest()\n\n  if (ix.latestBlock && ix.latestBlock.isSealed) {\n    req.setIsSealed(ix.latestBlock.isSealed)\n    latestBlockDeprecationNotice()\n  }\n\n  if (ix.block && ix.block.isSealed) {\n    req.setIsSealed(ix.block.isSealed)\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockById(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByIDRequest()\n  req.setId(hexBuffer(ix.block.id))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nexport async function sendGetBlockByHeight(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByHeightRequest()\n  req.setHeight(Number(ix.block.height))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetCollectionByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetCollection(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req = new GetCollectionByIDRequest()\n  req.setId(hexBuffer(ix.collection.id))\n\n  let res = await unary(opts.node, AccessAPI.GetCollectionByID, req)\n\n  const collection = res.getCollection()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.collection = {\n    id: u8ToHex(collection.getId_asU8()),\n    transactionIds: (collection.getTransactionIdsList()).map(u8ToHex)\n  }\n\n  return ret\n}\n","import {\n    isTransaction,\n    isGetTransaction,\n    isGetTransactionStatus,\n    isScript,\n    isGetAccount,\n    isGetEvents,\n    isGetBlock,\n    isGetBlockHeader,\n    isGetLatestBlock,\n    isGetBlockById,\n    isGetBlockByHeight,\n    isPing,\n    isGetCollection,\n} from \"../interaction/interaction.js\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {sendGetBlock} from \"./send-get-block.js\"\nimport {sendGetBlockHeader} from \"./send-get-block-header.js\"\nimport {sendGetLatestBlock} from \"./send-get-latest-block.js\"\nimport {sendGetBlockById} from \"./send-get-block-by-id.js\"\nimport {sendGetBlockByHeight} from \"./send-get-block-by-height.js\"\nimport {sendGetCollection} from \"./send-get-collection.js\"\nimport {sendPing} from \"./send-ping.js\"\nimport {config} from \"@onflow/config\"\n\nexport const send = async (ix, opts = {}) => {\n    opts.node = opts.node || (await config().get(\"accessNode.api\"))\n    ix = await ix\n\n    switch (true) {\n        case isTransaction(ix):\n            return opts.sendTransaction ? opts.sendTransaction(ix, opts) : sendTransaction(ix, opts)\n        case isGetTransactionStatus(ix):\n            return opts.sendGetTransactionStatus ? opts.sendGetTransactionStatus(ix, opts) : sendGetTransactionStatus(ix, opts)\n        case isGetTransaction(ix):\n            return opts.sendGetTransaction ? opts.sendGetTransaction(ix, opts) : sendGetTransaction(ix, opts)\n        case isScript(ix):\n            return opts.sendExecuteScript ? opts.sendExecuteScript(ix, opts) : sendExecuteScript(ix, opts)\n        case isGetAccount(ix):\n            return opts.sendGetAccount ? opts.sendGetAccount(ix, opts) : sendGetAccount(ix, opts)\n        case isGetEvents(ix):\n            return opts.sendGetEvents ? opts.sendGetEvents(ix, opts) : sendGetEvents(ix, opts)\n        case isGetLatestBlock(ix):\n            return opts.sendGetLatestBlock ? opts.sendGetLatestBlock(ix, opts) : sendGetLatestBlock(ix,  opts)\n        case isGetBlock(ix):\n            return opts.sendGetBlock ? opts.sendGetBlock(ix, opts) : sendGetBlock(ix, opts)\n        case isGetBlockHeader(ix):\n            return opts.sendGetBlockHeader ? opts.sendGetBlockHeader(ix, opts) : sendGetBlockHeader(ix, opts)\n        case isGetBlockById(ix):\n            return opts.sendGetBlockById ? opts.sendGetBlockById(ix, opts) : sendGetBlockById(ix, opts)\n        case isGetBlockByHeight(ix):\n            return opts.sendGetBlockByHeight ? opts.sendGetBlockByHeight(ix, opts) : sendGetBlockByHeight(ix, opts)\n        case isGetCollection(ix):\n            return opts.sendGetCollection ? opts.sendGetCollection(ix, opts) : sendGetCollection(ix, opts)\n        case isPing(ix):\n            return opts.sendPing ? opts.sendPing(ix, opts) : sendPing(ix, opts)\n        default:\n            return ix\n    }\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransactionStatus(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransactionResult, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionStatus = {\n    status: res.getStatus(),\n    statusCode: res.getStatusCode(),\n    errorMessage: res.getErrorMessage(),\n    events: events.map(event => ({\n      type: event.getType(),\n      transactionId: u8ToHex(event.getTransactionId_asU8()),\n      transactionIndex: event.getTransactionIndex(),\n      eventIndex: event.getEventIndex(),\n      payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n    })),\n  }\n\n  return ret\n}\n","import {AccessAPI, PingRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nexport async function sendPing(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new PingRequest()\n\n  const res = await unary(opts.node, AccessAPI.Ping, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    }\n  ])\n}\n","const latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/decode Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async (i) => i\n\nconst decodeVoid = async () => null\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async (v) => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      (v) =>\n        new Promise(async (res) =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[\n      await recurseDecode(v.key, decoders, [...stack, v.key])\n    ] = await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeNumber,\n  Int: decodeNumber,\n  UInt8: decodeNumber,\n  Int8: decodeNumber,\n  UInt16: decodeNumber,\n  Int16: decodeNumber,\n  UInt32: decodeNumber,\n  Int32: decodeNumber,\n  UInt64: decodeNumber,\n  Int64: decodeNumber,\n  UInt128: decodeNumber,\n  Int128: decodeNumber,\n  UInt256: decodeNumber,\n  Int256: decodeNumber,\n  Word8: decodeNumber,\n  Word16: decodeNumber,\n  Word32: decodeNumber,\n  Word64: decodeNumber,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find((decoder) => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n  return await recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n\n  if (response.encodedData) {\n    return await decode(response.encodedData, decoders)\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(\n        response.transactionStatus.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, decoders),\n          }\n        })\n      ),\n    }\n  } else if (response.transaction) {\n    return response.transaction\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          blockId: e.blockId,\n          blockHeight: e.blockHeight,\n          blockTimestamp: e.blockTimestamp,\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, decoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  } else if (response.collection) {\n    return response.collection\n  }\n\n  return null\n}\n","import {isTransaction, Ok, interaction, pipe} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\n\nasync function getRefId (opts) {\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await send(ix, opts)\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce(\n          (cadence, [key, value]) => cadence.replace(key, value),\n          cadence\n        )\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      ix.arguments[id].asArgument = cast(arg)\n    }\n  }\n\n  return ix\n}\n","import { encode } from '@onflow/rlp';\n\nexport const encodeTransactionPayload = tx => prependTransactionDomainTag(rlpEncode(preparePayload(tx)))\nexport const encodeTransactionEnvelope = tx => prependTransactionDomainTag(rlpEncode(prepareEnvelope(tx)))\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst TRANSACTION_DOMAIN_TAG = rightPaddedHexBuffer(Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"), 32).toString(\"hex\")\nconst prependTransactionDomainTag = tx => TRANSACTION_DOMAIN_TAG + tx\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => leftPaddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.cadence),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.computeLimit,\n    addressBuffer(tx.proposalKey.address),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(tx.payer),\n    tx.authorizers.map(addressBuffer),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  envelopeFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"cadence\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"computeLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst envelopeFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nexport function findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  inside.delete(ix.payer)\n  return Array.from(inside)\n}\n\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set([ix.payer])\n  return Array.from(outside)\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    // if (!acct.role.proposer) {\n    //   ix.accounts[id].keyId = keyId\n    // }\n    ix.accounts[id].signature = signature\n  }\n}\n\nexport const createSignableVoucher = ix => {\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: withPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: withPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => withPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n    payloadSigs: findInsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    })),\n  }\n}\n\nexport function buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.1\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: sansPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"../interaction/interaction.js\"\nimport {createSignableVoucher} from \"./resolve-signatures\"\n\nconst isFn = v => typeof v === \"function\"\nexport function buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.1\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    var old = last || ax\n    if (isFn(ax.resolve)) ax = await ax.resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer && ix.payer === old.tempId) {\n        ix.payer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = [...authorizations, ax.tempId]\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import { get, pipe, Ok, Bad } from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, 'ix.validators', [])\n  return pipe(ix, validators.map(cb => ix => cb(ix, { Ok, Bad })))\n}   \n","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nimport {send} from \"../send/sdk-send.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveRefBlockId} from \"./resolve-ref-block-id.js\"\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\n\nexport const resolve = pipe([\n    resolveCadence,\n    resolveArguments,\n    resolveAccounts,\n    /* special */ execFetchRef,\n    /* special */ execFetchSequenceNumber,\n    resolveSignatures,\n    resolveFinalNormalization,\n    resolveValidators,\n])\n\nasync function execFetchRef(ix) {\n    if (isTransaction(ix) && ix.message.refBlock == null) {\n        ix.message.refBlock = (await send(build([getBlock()])).then(decode)).id\n    }\n    return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\nif (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n    ix.accounts[acct.tempId].sequenceNum = await send(await build([getAccount(acct.addr)])).then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n}\nreturn ix\n}\n  ","import {\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\nimport {send as defaultSend} from \"./sdk-send.js\"\n\nexport const send = async (args = [], opts = {}) => {\n  const sendFunction = await config().get(\"sdk.send\", opts.send || defaultSend)\n  const resolveFunction = await config().get(\n    \"sdk.resolve\",\n    opts.resolve || defaultResolve\n  )\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFunction(await resolveFunction(args), opts)\n}\n\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {\n    encodeTransactionPayload,\n    encodeTransactionEnvelope,\n} from \"../encode/encode.js\"\n\nconst findPayloadSigners = (voucher) => {\n    // Payload Signers Are: (authorizers + proposer) - payer\n    let payload = new Set(voucher.authorizers)\n    payload.add(voucher.proposalKey.address)\n    payload.delete(voucher.payer)\n    return Array.from(payload).map(withPrefix)\n}\n\nconst findEnvelopeSigners = (voucher) => {\n    // Envelope Signers Are: (payer)\n    let envelope = new Set([voucher.payer])\n    return Array.from(envelope).map(withPrefix)\n}\n\nexport class UnableToDetermineMessageEncodingTypeForSignerAddress extends Error {\n    constructor(signerAddress) {\n      const msg = `\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: ${signerAddress}. \n        Please ensure the address: ${signerAddress} is intended to sign the given transaction as specified by the transaction signable.\n      `.trim()\n      super(msg)\n      this.name = \"Unable To Determine Message Encoding For Signer Addresss\"\n    }\n}\n\nexport const encodeMessageFromSignable = (signable, signerAddress) => {\n    let payloadSigners = findPayloadSigners(signable.voucher)\n    let envelopeSigners = findEnvelopeSigners(signable.voucher)\n\n    const isPayloadSigner = payloadSigners.includes(withPrefix(signerAddress))\n    const isEnvelopeSigner = envelopeSigners.includes(withPrefix(signerAddress))\n\n    if (!isPayloadSigner && !isEnvelopeSigner) {\n        throw new UnableToDetermineMessageEncodingTypeForSignerAddress(signerAddress)\n    }\n\n    const message = {\n        cadence: signable.voucher.cadence,\n        refBlock: signable.voucher.refBlock,\n        computeLimit: signable.voucher.computeLimit,\n        arguments: signable.voucher.arguments,\n        proposalKey: {\n            ...signable.voucher.proposalKey,\n            address: sansPrefix(signable.voucher.proposalKey.address)\n        },\n        payer: sansPrefix(signable.voucher.payer),\n        authorizers: signable.voucher.authorizers.map(sansPrefix),\n        payloadSigs: signable.voucher.payloadSigs.map(ps => ({\n            ...ps,\n            address: sansPrefix(ps.address)\n        }))\n    }\n\n    return isPayloadSigner ? encodeTransactionPayload(message) : encodeTransactionEnvelope(message)\n}\n\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nexport function latestBlock(...args) {\n  let opts = args[1] || (typeof args[0] === \"object\" ? args[0] : undefined)\n  let isSealed = typeof args[0] === \"boolean\" ? args[0] : undefined\n\n  if (typeof args[0] === \"object\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n\n  return send([getBlock(isSealed)], opts).then(decode)\n}\n","import {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\nexport function account(address, opts) {\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {pipe, prepAccount, AUTHORIZER} from \"../interaction/interaction.js\"\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: AUTHORIZER})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n    return update('ix.validators', validators => \n        Array.isArray(validators) ? validators.push(cb) : [cb]\n    )\n}\n","import {pipe} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return ix\n    },\n    validator(ix => {\n      if (typeof ix.block.isSealed === \"boolean\")\n        throw new Error(\"Unable to specify both block height and isSealed.\")\n      if (ix.block.id)\n        throw new Error(\"Unable to specify both block height and block id.\")\n      return ix\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix)) return Bad(ix, \"Unable to specify a block id with a Get Account interaction.\")\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height) return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEvents(eventType, start, end) {\n\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )  \n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockHeightRange(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockIds(eventType, blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetLatestBlock} from \"../interaction/interaction.js\"\n\nexport function getLatestBlock(isSealed = false) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetLatestBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockById} from \"../interaction/interaction.js\"\n\nexport function getBlockById(id) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockById,\n    ix => {\n      ix.block.ids = [id]\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockByHeight} from \"../interaction/interaction.js\"\n\nexport function getBlockByHeight(height) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockByHeight,\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetCollection} from \"../interaction/interaction.js\"\n\nexport function getCollection(id = null) {\n  return pipe([\n    makeGetCollection,\n    ix => {\n      ix.collection.id = id\n      return ix\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","export function limit(computeLimit) {\n  return ix => {\n    ix.message.computeLimit = computeLimit\n    return ix\n  }\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {prepAccount, PROPOSER} from \"../interaction/interaction.js\"\n\nexport async function proposer(authz) {\n  return prepAccount(authz, {role: PROPOSER})\n}\n","import {prepAccount, PAYER} from \"../interaction/interaction.js\"\n\nexport async function payer(authz) {\n  return prepAccount(authz, {role: PAYER})\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([\n    makeScript,\n    put(\"ix.cadence\", template(...args))\n  ])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_COMPUTE_LIMIT = 10\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.computeLimit = ix.message.computeLimit || DEFAULT_COMPUTE_LIMIT\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import { Ok, Bad } from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, { Ok, Bad }) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {isTransaction, Ok} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {build} from \"../build/build.js\"\n\nexport const resolveProposerSequenceNumber = ({ node }) => async (ix) => {\n  if (!(isTransaction(ix))) return Ok(ix)\n  if (ix.accounts[ix.proposer].sequenceNum) return Ok(ix)\n\n  const response = await send(await build([\n    getAccount(ix.accounts[ix.proposer].addr)\n  ]), { node })\n  const decoded = await decodeResponse(response)\n\n  ix.accounts[ix.proposer].sequenceNum = decoded.keys[ix.accounts[ix.proposer].keyId].sequenceNumber\n\n  return Ok(ix)\n}\n","import {deprecate} from \"./utils\"\n// Base\nexport {build} from \"./build/build.js\"\nexport {resolve} from \"./resolve/resolve.js\"\nexport {send} from \"./send/send.js\"\nexport {decode} from \"./decode/sdk-decode.js\"\n\n// Utils\nexport {\n  interaction,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  get,\n  put,\n  update,\n  destroy,\n  isUnknown,\n  isScript,\n  isTransaction,\n  isGetTransaction,\n  isGetTransactionStatus,\n  isGetAccount,\n  isGetEvents,\n  isGetLatestBlock,\n  isGetBlockById,\n  isGetBlockByHeight,\n  isPing,\n  isGetBlock,\n  isGetBlockHeader,\n  isGetCollection,\n} from \"./interaction/interaction.js\"\nexport {createSignableVoucher} from \"./resolve/resolve-signatures\"\nexport {encodeMessageFromSignable} from \"./wallet-utils/encode-signable.js\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// Helpers\nexport {latestBlock} from \"./latest-block/latest-block.js\"\nexport {account} from \"./account/account.js\"\n\n// Builders\nexport {authorizations, authorization} from \"./build/build-authorizations.js\"\nexport {atBlockHeight} from \"./build/build-at-block-height.js\"\nexport {atBlockId} from \"./build/build-at-block-id.js\"\nexport {getAccount} from \"./build/build-get-account.js\"\nexport {getEvents} from \"./build/build-get-events.js\"\nexport {getEventsAtBlockHeightRange} from \"./build/build-get-events-at-block-height-range.js\"\nexport {getEventsAtBlockIds} from \"./build/build-get-events-at-block-ids\"\nexport {getBlock} from \"./build/build-get-block.js\"\nexport {getBlockHeader} from \"./build/build-get-block-header.js\"\nexport {getLatestBlock} from \"./build/build-get-latest-block.js\"\nexport {getBlockById} from \"./build/build-get-block-by-id.js\"\nexport {getBlockByHeight} from \"./build/build-get-block-by-height\"\nexport {getCollection} from \"./build/build-get-collection\"\nexport {getTransactionStatus} from \"./build/build-get-transaction-status.js\"\nexport {getTransaction} from \"./build/build-get-transaction.js\"\nexport {limit} from \"./build/build-limit.js\"\nexport {args, arg} from \"./build/build-arguments.js\"\nexport {proposer} from \"./build/build-proposer.js\"\nexport {payer} from \"./build/build-payer.js\"\nexport {ping} from \"./build/build-ping.js\"\nexport {ref} from \"./build/build-ref.js\"\nexport {script} from \"./build/build-script.js\"\nexport {transaction} from \"./build/build-transaction.js\"\nexport {validator} from \"./build/build-validator.js\"\nexport {invariant} from \"./build/build-invariant.js\"\n\n// Resolvers\nexport {resolveCadence} from \"./resolve/resolve-cadence.js\"\nexport {resolveFinalNormalization} from \"./resolve/resolve-final-normalization\"\nexport {resolveProposerSequenceNumber} from \"./resolve/resolve-proposer-sequence-number\"\nexport {resolveArguments} from \"./resolve/resolve-arguments.js\"\nexport {resolveAccounts} from \"./resolve/resolve-accounts.js\"\nexport {resolveSignatures} from \"./resolve/resolve-signatures.js\"\nexport {resolveValidators} from \"./resolve/resolve-validators.js\"\nexport {resolveRefBlockId} from \"./resolve/resolve-ref-block-id.js\"\n\n// Config\nexport {config} from \"@onflow/config\"\n\n// Deprecated\nexport const params = params =>\n  deprecate.error({\n    name: \"params\",\n    transitionsPath:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n  })\nexport const param = params =>\n  deprecate.warn({\n    name: \"param\",\n    transitionsPath:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n  })\n","const buildWarningMessage = ({name, transitionsPath}) => {\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The ${name} builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: ${transitionsPath}\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst buildErrorMessage = ({name, transitionsPath}) => {\n  console.error(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The ${name} builder has been removed from the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: ${transitionsPath}\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst warn = deprecated => buildWarningMessage(deprecated)\n\nconst error = deprecated => {\n  buildErrorMessage(deprecated)\n}\n\nexport const deprecate = {\n  warn,\n  error,\n}\n"]},"metadata":{},"sourceType":"module"}