{"ast":null,"code":"var _jsxFileName = \"/Users/minh/Desktop/TestSite/wc-prototype/src/pages/components/chkProf.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst chkProf = () => {\n  _s();\n\n  const [status, setStatus] = useState(\"Not Started\");\n\n  const Mint = async () => {\n    const encoded = await fcl.send([fcl.script`\n        import Profile from 0xba1132bc08f82fe2\n\n        pub fun main(address: Address): Profile.ReadOnly? {\n          return Profile.read(address)\n        }\n      `, fcl.proposer(fcl.authz), fcl.authorizations([fcl.authz]), fcl.payer(fcl.authz), fcl.args([fcl.arg(0x7e4d8e1b1f546ba9, t.Address)])]);\n    setStatus(\"Transaction Sent, Waiting for Confirmation\");\n    const decoded = await fcl.decode(encoded);\n    const unsub = fcl.tx(decoded).subscribe(transaction => {\n      if (fcl.tx.isSealed(transaction)) {\n        setStatus(decoded);\n        unsub();\n      }\n    });\n    console.log(decoded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mint-nft\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fancy\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            onClick: Mint,\n            children: \"InitializeAcct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(chkProf, \"1jqZiVMwxiCVyEhB0xNOkX33l5A=\");\n\nexport default chkProf;","map":{"version":3,"sources":["/Users/minh/Desktop/TestSite/wc-prototype/src/pages/components/chkProf.js"],"names":["React","useState","fcl","t","chkProf","status","setStatus","Mint","encoded","send","script","proposer","authz","authorizations","payer","args","arg","Address","decoded","decode","unsub","tx","subscribe","transaction","isSealed","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;AACA,OAAO,KAAKC,CAAZ,MAAmB,eAAnB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,aAAD,CAApC;;AACA,QAAMM,IAAI,GAAG,YAAY;AACvB,UAAMC,OAAO,GAAG,MAAMN,GAAG,CACtBO,IADmB,CACd,CACJP,GAAG,CAACQ,MAAO;AACnB;AACA;AACA;AACA;AACA;AACA,OAPY,EAQNR,GAAG,CAACS,QAAJ,CAAaT,GAAG,CAACU,KAAjB,CARM,EASNV,GAAG,CAACW,cAAJ,CAAmB,CAACX,GAAG,CAACU,KAAL,CAAnB,CATM,EAUNV,GAAG,CAACY,KAAJ,CAAUZ,GAAG,CAACU,KAAd,CAVM,EAWNV,GAAG,CAACa,IAAJ,CAAS,CAACb,GAAG,CAACc,GAAJ,CAAQ,kBAAR,EAA4Bb,CAAC,CAACc,OAA9B,CAAD,CAAT,CAXM,CADc,CAAtB;AAeAX,IAAAA,SAAS,CAAC,4CAAD,CAAT;AACA,UAAMY,OAAO,GAAG,MAAMhB,GAAG,CAACiB,MAAJ,CAAWX,OAAX,CAAtB;AACA,UAAMY,KAAK,GAAGlB,GAAG,CAACmB,EAAJ,CAAOH,OAAP,EAAgBI,SAAhB,CAA0BC,WAAW,IAAI;AACrD,UAAIrB,GAAG,CAACmB,EAAJ,CAAOG,QAAP,CAAgBD,WAAhB,CAAJ,EAAkC;AAChCjB,QAAAA,SAAS,CAACY,OAAD,CAAT;AACAE,QAAAA,KAAK;AACN;AACF,KALa,CAAd;AAMAK,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAED,GA1BD;;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAgC,YAAA,OAAO,EAAEX,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBACGF;AADH;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3CD;;GAAMD,O;;AA6CN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\"\n\nconst chkProf = () => {\n  const [status, setStatus] = useState(\"Not Started\")\n  const Mint = async () => {\n    const encoded = await fcl\n      .send([\n        fcl.script`\n        import Profile from 0xba1132bc08f82fe2\n\n        pub fun main(address: Address): Profile.ReadOnly? {\n          return Profile.read(address)\n        }\n      `,\n      fcl.proposer(fcl.authz),\n      fcl.authorizations([fcl.authz]),\n      fcl.payer(fcl.authz),\n      fcl.args([fcl.arg(0x7e4d8e1b1f546ba9, t.Address)])\n    ]\n    )\n    setStatus(\"Transaction Sent, Waiting for Confirmation\")\n    const decoded = await fcl.decode(encoded)\n    const unsub = fcl.tx(decoded).subscribe(transaction => {\n      if (fcl.tx.isSealed(transaction)) {\n        setStatus(decoded)\n        unsub()\n      }\n    })\n    console.log(decoded)\n\n  };\n  return (\n    <div className=\"mint-nft\">\n        <div className=\"center\">\n        <div className=\"fancy\">\n        <div className=\"center\">\n            <button className=\"btn-primary\" onClick={Mint}>InitializeAcct</button>  \n            <div>\n              {status}\n            </div>      \n        </div>\n        </div>\n        </div>\n    </div>\n  );\n};\n\nexport default chkProf;"]},"metadata":{},"sourceType":"module"}