{"ast":null,"code":"var _jsxFileName = \"/Users/minh/Desktop/TestSite/wc-prototype/src/pages/components/chkProf.js\";\nimport React, { useState } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst chkProf = () => {\n  //const [status, setStatus] = useState(null)\n  const Mint = async () => {\n    const encoded = await fcl.send([fcl.script`\n        import Profile from 0xba1132bc08f82fe2\n\n        pub fun main(address: Address): Profile.ReadOnly? {\n          return Profile.read(address)\n        }\n      `, fcl.proposer(fcl.authz), fcl.authorizations([fcl.authz]), fcl.payer(fcl.authz), fcl.args([fcl.arg(\"0x7e4d8e1b1f546ba9\", t.Address)])]); //setStatus(\"Transaction Sent, Waiting for Confirmation\")\n\n    const decoded = await fcl.decode(encoded);\n    const unsub = fcl.tx(decoded).subscribe(transaction => {\n      if (fcl.tx.isSealed(transaction)) {\n        //setStatus(decoded)\n        unsub();\n      }\n    });\n    console.log(decoded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mint-nft\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fancy\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            onClick: Mint,\n            children: \"CheckProfile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default chkProf;","map":{"version":3,"sources":["/Users/minh/Desktop/TestSite/wc-prototype/src/pages/components/chkProf.js"],"names":["React","useState","fcl","t","chkProf","Mint","encoded","send","script","proposer","authz","authorizations","payer","args","arg","Address","decoded","decode","unsub","tx","subscribe","transaction","isSealed","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;AACA,OAAO,KAAKC,CAAZ,MAAmB,eAAnB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB;AACA,QAAMC,IAAI,GAAG,YAAY;AACvB,UAAMC,OAAO,GAAG,MAAMJ,GAAG,CACtBK,IADmB,CACd,CACJL,GAAG,CAACM,MAAO;AACnB;AACA;AACA;AACA;AACA;AACA,OAPY,EAQNN,GAAG,CAACO,QAAJ,CAAaP,GAAG,CAACQ,KAAjB,CARM,EASNR,GAAG,CAACS,cAAJ,CAAmB,CAACT,GAAG,CAACQ,KAAL,CAAnB,CATM,EAUNR,GAAG,CAACU,KAAJ,CAAUV,GAAG,CAACQ,KAAd,CAVM,EAWNR,GAAG,CAACW,IAAJ,CAAS,CAACX,GAAG,CAACY,GAAJ,CAAQ,oBAAR,EAA8BX,CAAC,CAACY,OAAhC,CAAD,CAAT,CAXM,CADc,CAAtB,CADuB,CAgBvB;;AACA,UAAMC,OAAO,GAAG,MAAMd,GAAG,CAACe,MAAJ,CAAWX,OAAX,CAAtB;AACA,UAAMY,KAAK,GAAGhB,GAAG,CAACiB,EAAJ,CAAOH,OAAP,EAAgBI,SAAhB,CAA0BC,WAAW,IAAI;AACrD,UAAInB,GAAG,CAACiB,EAAJ,CAAOG,QAAP,CAAgBD,WAAhB,CAAJ,EAAkC;AAChC;AACAH,QAAAA,KAAK;AACN;AACF,KALa,CAAd;AAMAK,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAED,GA1BD;;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAgC,YAAA,OAAO,EAAEX,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\"\n\nconst chkProf = () => {\n  //const [status, setStatus] = useState(null)\n  const Mint = async () => {\n    const encoded = await fcl\n      .send([\n        fcl.script`\n        import Profile from 0xba1132bc08f82fe2\n\n        pub fun main(address: Address): Profile.ReadOnly? {\n          return Profile.read(address)\n        }\n      `,\n      fcl.proposer(fcl.authz),\n      fcl.authorizations([fcl.authz]),\n      fcl.payer(fcl.authz),\n      fcl.args([fcl.arg(\"0x7e4d8e1b1f546ba9\", t.Address)])\n    ]\n    )\n    //setStatus(\"Transaction Sent, Waiting for Confirmation\")\n    const decoded = await fcl.decode(encoded)\n    const unsub = fcl.tx(decoded).subscribe(transaction => {\n      if (fcl.tx.isSealed(transaction)) {\n        //setStatus(decoded)\n        unsub()\n      }\n    })\n    console.log(decoded)\n\n  };\n  return (\n    <div className=\"mint-nft\">\n        <div className=\"center\">\n        <div className=\"fancy\">\n        <div className=\"center\">\n            <button className=\"btn-primary\" onClick={Mint}>CheckProfile</button>      \n        </div>\n        </div>\n        </div>\n    </div>\n  );\n};\n\nexport default chkProf;"]},"metadata":{},"sourceType":"module"}