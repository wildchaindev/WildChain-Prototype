{"ast":null,"code":"var _jsxFileName = \"/Users/minh/Desktop/TestSite/wc-prototype/src/pages/MetaMintPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar current = new Date();\nvar dd = String(current.getDate()).padStart(2, '0');\nvar mm = String(current.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nvar yyyy = current.getFullYear();\ncurrent = mm + '/' + dd + '/' + yyyy;\nlet stateArr = ['author', 'caption', 'lang', 'dateMediaPost', 'rtCount', 'fvCount', 'idStr', 'uri', 'dateMint', 'rarity'];\n\nclass MetaMintPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Mint = async () => {\n      let profile = process.env.REACT_APP_CONTRACT_PROFILE;\n      let code = `\n        import WildNFT from 0xProfile\n\n        transaction(customData: {String : String}) {\n            // If the person executing this tx doesn't have access to the\n            // resource, then the tx will fail. Thus, references...\n            let receiverRef: &{WildNFT.NFTReceiver}\n            let minterRef: &{WildNFT.NFTAuthMint}\n        \n            // ...in \"prepare\", the code borrows capabilities on the two resources referenced above,\n            // takes in information of the person executing the tx, and validates.\n            prepare(acct: AuthAccount) {\n                let admin = getAccount(` + profile + `)\n                self.receiverRef = acct.getCapability<&{WildNFT.NFTReceiver}>(/public/NFTReceiver)\n                    .borrow()\n                    ?? panic(\"Could not borrow receiver reference.\")\n    \n                self.minterRef = admin.getCapability<&{WildNFT.NFTAuthMint}>(/public/AuthMint)\n                    .borrow()\n                    ?? panic(\"Could not borrow auth minter reference.\")\n        \n                let metadata : {String : String} = customData\n        \n                // This is where the NFT resource itself is created\n                self.minterRef.authMint(authUser: acct)\n                let newNFT <- acct.load<@WildNFT.NFT>(from: /storage/MintedNFT)!\n        \n                // This is where the metadata comes into the picture to join with the new NFT!\n                self.receiverRef.deposit(token: <-newNFT, metadata: metadata)\n        \n                log(\"NFT has been minted and deposited to Account's Collection\")\n            }\n        }`;\n      /*let customData = {}\n      stateArr.forEach(el => customData[el] = this.state[el])\n      console.log(\"Dictionary Key: \" + typeof(Object.keys(customData)[0]))\n      console.log(\"Dictionary Value: \" + typeof(customData[\"author\"]))*/\n\n      const encoded = await fcl.send([fcl.transaction`${code}`, fcl.proposer(fcl.authz), fcl.authorizations([fcl.authz]), fcl.payer(fcl.authz), fcl.limit(50), fcl.args([fcl.arg([{\n        key: \"author\",\n        value: this.state.author\n      }, {\n        key: \"caption\",\n        value: this.state.caption\n      }, {\n        key: \"lang\",\n        value: this.state.lang\n      }, {\n        key: \"dateMediaPost\",\n        value: this.state.dateMediaPost\n      }, {\n        key: \"rtCount\",\n        value: this.state.rtCount\n      }, {\n        key: \"fvCount\",\n        value: this.state.fvCount\n      }, {\n        key: \"idStr\",\n        value: this.state.idStr\n      }, {\n        key: \"uri\",\n        value: this.state.uri\n      }, {\n        key: \"dateMint\",\n        value: this.state.dateMint\n      }, {\n        key: \"rarity\",\n        value: this.state.rarity\n      }], t.Dictionary({\n        key: t.String,\n        value: t.String\n      }))])]);\n      const decoded = await fcl.decode(encoded);\n      console.log(decoded);\n    };\n\n    this.state = {\n      author: \"Type author's name here\",\n      caption: \"Type Tweet's caption here\",\n      lang: \"eng\",\n      dateMediaPost: \"Enter Date Here\",\n      rtCount: \"Type Tweet's retweet count here\",\n      fvCount: \"Type Tweet's favorite count here\",\n      idStr: \"Type Tweet's ID String here\",\n      uri: \"Type Tweet's URI Address from IPFS here\",\n      dateMint: current,\n      rarity: \"na\",\n      auth: false\n    };\n  }\n\n  onInputchange(elementId) {\n    let idValue = document.getElementById(elementId).value;\n\n    switch (elementId) {\n      case \"author\":\n        this.setState({\n          author: idValue\n        });\n        console.log(this.state.author);\n        break;\n\n      case \"caption\":\n        this.setState({\n          caption: idValue\n        });\n        console.log(this.state.caption);\n        break;\n\n      case \"lang\":\n        this.setState({\n          lang: idValue\n        });\n        console.log(this.state.lang);\n        break;\n\n      case \"dateMediaPost\":\n        this.setState({\n          dateMediaPost: idValue\n        });\n        console.log(this.state.dateMediaPost);\n        break;\n\n      case \"rtCount\":\n        this.setState({\n          rtCount: idValue\n        });\n        console.log(this.state.rtCount);\n        break;\n\n      case \"fvCount\":\n        this.setState({\n          fvCount: idValue\n        });\n        console.log(this.state.fvCount);\n        break;\n\n      case \"idStr\":\n        this.setState({\n          idStr: idValue\n        });\n        console.log(this.state.idStr);\n        break;\n\n      case \"uri\":\n        this.setState({\n          uri: idValue\n        });\n        console.log(this.state.uri);\n        break;\n\n      case \"dateMint\":\n        this.setState({\n          dateMint: idValue\n        });\n        console.log(this.state.dateMint);\n        break;\n\n      case \"rarity\":\n        this.setState({\n          rarity: idValue\n        });\n        console.log(this.state.rarity);\n        break;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata Minting Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"pageCenter\",\n        id: \"pageCenter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"metaEnter\",\n          id: \"WildMetaEnter\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            form: \"author\",\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            name: \"author\",\n            value: this.state.author,\n            onChange: () => this.onInputchange(\"author\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            form: \"caption\",\n            children: \"Caption:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"caption\",\n            name: \"caption\",\n            value: this.state.caption,\n            onChange: () => this.onInputchange(\"caption\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            form: \"lang\",\n            children: \"Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"lang\",\n            id: \"lang\",\n            value: this.state.lang,\n            onChange: () => this.onInputchange(\"lang\"),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"eng\",\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"span\",\n              children: \"Espa\\xF1ol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"fren\",\n              children: \"Francais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"kor\",\n              children: \"\\uD55C\\uAD6D\\uC5B4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            form: \"dateMediaPost\",\n            children: \"Date Media Posted:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"dateMediaPost\",\n            name: \"date-media\",\n            value: this.state.dateMediaPost,\n            onChange: () => this.onInputchange(\"dateMediaPost\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            form: \"rtCount\",\n            children: \"Retweet Count:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"rtCount\",\n            name: \"rtCount\",\n            value: this.state.rtCount,\n            onChange: () => this.onInputchange(\"rtCount\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            form: \"fvCount\",\n            children: \"Favorite Count:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"fvCount\",\n            name: \"fvCount\",\n            value: this.state.fvCount,\n            onChange: () => this.onInputchange(\"fvCount\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            form: \"idStr\",\n            children: \"ID String:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"idStr\",\n            name: \"idStr\",\n            value: this.state.idStr,\n            onChange: () => this.onInputchange(\"idStr\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            form: \"uri\",\n            children: \"URI Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"uri\",\n            name: \"uri\",\n            value: this.state.uri,\n            onChange: () => this.onInputchange(\"uri\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            form: \"dateMint\",\n            children: \"Date NFT Minted:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"dateMint\",\n            name: \"dateMint\",\n            value: this.state.dateMint,\n            onChange: () => this.onInputchange(\"dateMint\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            form: \"rarity\",\n            children: \"Rarity Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"rarity\",\n            id: \"rarity\",\n            value: this.state.rarity,\n            onChange: () => this.onInputchange(\"rarity\"),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"na\",\n              children: \"Select Rarity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"low\",\n              children: \"Low Rarity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"med\",\n              children: \"Medium Rarity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"high\",\n              children: \"High Rarity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"max\",\n              children: \"Extreme Rarity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.Mint,\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MetaMintPage;","map":{"version":3,"sources":["/Users/minh/Desktop/TestSite/wc-prototype/src/pages/MetaMintPage.js"],"names":["React","useEffect","useState","fcl","t","current","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","stateArr","MetaMintPage","Component","constructor","props","Mint","profile","process","env","REACT_APP_CONTRACT_PROFILE","code","encoded","send","transaction","proposer","authz","authorizations","payer","limit","args","arg","key","value","state","author","caption","lang","dateMediaPost","rtCount","fvCount","idStr","uri","dateMint","rarity","Dictionary","decoded","decode","console","log","auth","onInputchange","elementId","idValue","document","getElementById","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;AACA,OAAO,KAAKC,CAAZ,MAAmB,eAAnB;;AAEA,IAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,IAAIC,EAAE,GAAGC,MAAM,CAACH,OAAO,CAACI,OAAR,EAAD,CAAN,CAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAT;AACA,IAAIC,EAAE,GAAGH,MAAM,CAACH,OAAO,CAACO,QAAR,KAAqB,CAAtB,CAAN,CAA+BF,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,CAAT,C,CAA0D;;AAC1D,IAAIG,IAAI,GAAGR,OAAO,CAACS,WAAR,EAAX;AACAT,OAAO,GAAGM,EAAE,GAAG,GAAL,GAAWJ,EAAX,GAAgB,GAAhB,GAAsBM,IAAhC;AACA,IAAIE,QAAQ,GAAG,CACf,QADe,EAEf,SAFe,EAGf,MAHe,EAIf,eAJe,EAKf,SALe,EAMf,SANe,EAOf,OAPe,EAQf,KARe,EASf,UATe,EAUf,QAVe,CAAf;;AAYA,MAAMC,YAAN,SAA2BhB,KAAK,CAACiB,SAAjC,CAA2C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,IAhBmB,GAgBZ,YAAY;AACf,UAAIC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,0BAA1B;AACA,UAAIC,IAAI,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAZmB,GAYsBJ,OAZtB,GAY+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAhCQ;AAiCA;AACR;AACA;AACA;;AACQ,YAAMK,OAAO,GAAG,MAAMvB,GAAG,CACtBwB,IADmB,CACd,CACJxB,GAAG,CAACyB,WAAY,GAAEH,IAAK,EADnB,EAEJtB,GAAG,CAAC0B,QAAJ,CAAa1B,GAAG,CAAC2B,KAAjB,CAFI,EAGJ3B,GAAG,CAAC4B,cAAJ,CAAmB,CAAC5B,GAAG,CAAC2B,KAAL,CAAnB,CAHI,EAIJ3B,GAAG,CAAC6B,KAAJ,CAAU7B,GAAG,CAAC2B,KAAd,CAJI,EAKJ3B,GAAG,CAAC8B,KAAJ,CAAU,EAAV,CALI,EAMJ9B,GAAG,CAAC+B,IAAJ,CACA,CAAE/B,GAAG,CAACgC,GAAJ,CACE,CAAC;AAACC,QAAAA,GAAG,EAAE,QAAN;AAAgBC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC;AAAlC,OAAD,EACA;AAACH,QAAAA,GAAG,EAAE,SAAN;AAAiBC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWE;AAAnC,OADA,EAEA;AAACJ,QAAAA,GAAG,EAAE,MAAN;AAAcC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWG;AAAhC,OAFA,EAGA;AAACL,QAAAA,GAAG,EAAE,eAAN;AAAuBC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWI;AAAzC,OAHA,EAIA;AAACN,QAAAA,GAAG,EAAE,SAAN;AAAiBC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWK;AAAnC,OAJA,EAKA;AAACP,QAAAA,GAAG,EAAE,SAAN;AAAiBC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWM;AAAnC,OALA,EAMA;AAACR,QAAAA,GAAG,EAAE,OAAN;AAAeC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWO;AAAjC,OANA,EAOA;AAACT,QAAAA,GAAG,EAAE,KAAN;AAAaC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWQ;AAA/B,OAPA,EAQA;AAACV,QAAAA,GAAG,EAAE,UAAN;AAAkBC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWS;AAApC,OARA,EASA;AAACX,QAAAA,GAAG,EAAE,QAAN;AAAgBC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWU;AAAlC,OATA,CADF,EAWE5C,CAAC,CAAC6C,UAAF,CAAa;AAACb,QAAAA,GAAG,EAAEhC,CAAC,CAACI,MAAR;AAAgB6B,QAAAA,KAAK,EAAEjC,CAAC,CAACI;AAAzB,OAAb,CAXF,CAAF,CADA,CANI,CADc,CAAtB;AAsBA,YAAM0C,OAAO,GAAG,MAAM/C,GAAG,CAACgD,MAAJ,CAAWzB,OAAX,CAAtB;AACA0B,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACH,KA/EkB;;AAEf,SAAKZ,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,yBADC;AAETC,MAAAA,OAAO,EAAC,2BAFC;AAGTC,MAAAA,IAAI,EAAC,KAHI;AAITC,MAAAA,aAAa,EAAC,iBAJL;AAKTC,MAAAA,OAAO,EAAC,iCALC;AAMTC,MAAAA,OAAO,EAAC,kCANC;AAOTC,MAAAA,KAAK,EAAE,6BAPE;AAQTC,MAAAA,GAAG,EAAE,yCARI;AASTC,MAAAA,QAAQ,EAAE1C,OATD;AAUT2C,MAAAA,MAAM,EAAE,IAVC;AAWTM,MAAAA,IAAI,EAAE;AAXG,KAAb;AAYD;;AAmEHC,EAAAA,aAAa,CAACC,SAAD,EAAY;AACrB,QAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,SAAxB,EAAmCnB,KAAjD;;AACA,YAAOmB,SAAP;AACA,WAAK,QAAL;AACE,aAAKI,QAAL,CAAc;AACZrB,UAAAA,MAAM,EAAEkB;AADI,SAAd;AAGAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,MAAvB;AACA;;AACF,WAAK,SAAL;AACE,aAAKqB,QAAL,CAAc;AACZpB,UAAAA,OAAO,EAAEiB;AADG,SAAd;AAGAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWE,OAAvB;AACA;;AACF,WAAK,MAAL;AACE,aAAKoB,QAAL,CAAc;AACZnB,UAAAA,IAAI,EAAEgB;AADM,SAAd;AAGAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWG,IAAvB;AACA;;AACF,WAAK,eAAL;AACE,aAAKmB,QAAL,CAAc;AACZlB,UAAAA,aAAa,EAAEe;AADH,SAAd;AAGAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWI,aAAvB;AACA;;AACF,WAAK,SAAL;AACE,aAAKkB,QAAL,CAAc;AACZjB,UAAAA,OAAO,EAAEc;AADG,SAAd;AAGAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWK,OAAvB;AACA;;AACF,WAAK,SAAL;AACE,aAAKiB,QAAL,CAAc;AACZhB,UAAAA,OAAO,EAAEa;AADG,SAAd;AAGAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWM,OAAvB;AACA;;AACF,WAAK,OAAL;AACE,aAAKgB,QAAL,CAAc;AACZf,UAAAA,KAAK,EAAEY;AADK,SAAd;AAGAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWO,KAAvB;AACA;;AACF,WAAK,KAAL;AACE,aAAKe,QAAL,CAAc;AACZd,UAAAA,GAAG,EAAEW;AADO,SAAd;AAGAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWQ,GAAvB;AACA;;AACF,WAAK,UAAL;AACE,aAAKc,QAAL,CAAc;AACZb,UAAAA,QAAQ,EAAEU;AADE,SAAd;AAGAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWS,QAAvB;AACA;;AACF,WAAK,QAAL;AACE,aAAKa,QAAL,CAAc;AACZZ,UAAAA,MAAM,EAAES;AADI,SAAd;AAGAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWU,MAAvB;AACA;AA5DF;AA8DD;;AAEHa,EAAAA,MAAM,GAAG;AACP,wBACA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,KAAK,EAAC,YAAX;AAAwB,QAAA,EAAE,EAAC,YAA3B;AAAA,gCACM;AAAK,UAAA,KAAK,EAAC,WAAX;AAAuB,UAAA,EAAE,EAAC,eAA1B;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,QAFP;AAGI,YAAA,IAAI,EAAC,QAHT;AAII,YAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,MAJtB;AAKI,YAAA,QAAQ,EAAE,MAAM,KAAKgB,aAAL,CAAmB,QAAnB;AALpB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAQI;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAO,YAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,SAFP;AAGI,YAAA,IAAI,EAAC,SAHT;AAII,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWE,OAJtB;AAKI,YAAA,QAAQ,EAAE,MAAM,KAAKe,aAAL,CAAmB,SAAnB;AALpB;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAgBI;AAAA;AAAA;AAAA;AAAA,kBAhBJ,eAiBI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eAkBI;AACA,YAAA,IAAI,EAAC,MADL;AAEA,YAAA,EAAE,EAAC,MAFH;AAGA,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWG,IAHlB;AAIA,YAAA,QAAQ,EAAE,MAAM,KAAKc,aAAL,CAAmB,MAAnB,CAJhB;AAAA,oCAKI;AAAQ,cAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI;AAAQ,cAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ,eA4BI;AAAA;AAAA;AAAA;AAAA,kBA5BJ,eA6BI;AAAO,YAAA,IAAI,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BJ,eA8BI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,eAFP;AAGI,YAAA,IAAI,EAAC,YAHT;AAII,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWI,aAJtB;AAKI,YAAA,QAAQ,EAAE,MAAM,KAAKa,aAAL,CAAmB,eAAnB;AALpB;AAAA;AAAA;AAAA;AAAA,kBA9BJ,eAoCI;AAAA;AAAA;AAAA;AAAA,kBApCJ,eAqCI;AAAO,YAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCJ,eAsCI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,SAFP;AAGI,YAAA,IAAI,EAAC,SAHT;AAII,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWK,OAJtB;AAKI,YAAA,QAAQ,EAAE,MAAM,KAAKY,aAAL,CAAmB,SAAnB;AALpB;AAAA;AAAA;AAAA;AAAA,kBAtCJ,eA4CI;AAAA;AAAA;AAAA;AAAA,kBA5CJ,eA6CI;AAAO,YAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7CJ,eA8CI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,SAFP;AAGI,YAAA,IAAI,EAAC,SAHT;AAII,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWM,OAJtB;AAKI,YAAA,QAAQ,EAAE,MAAM,KAAKW,aAAL,CAAmB,SAAnB;AALpB;AAAA;AAAA;AAAA;AAAA,kBA9CJ,eAoDI;AAAA;AAAA;AAAA;AAAA,kBApDJ,eAqDI;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArDJ,eAsDI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,OAFP;AAGI,YAAA,IAAI,EAAC,OAHT;AAII,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWO,KAJtB;AAKI,YAAA,QAAQ,EAAE,MAAM,KAAKU,aAAL,CAAmB,OAAnB;AALpB;AAAA;AAAA;AAAA;AAAA,kBAtDJ,eA4DI;AAAA;AAAA;AAAA;AAAA,kBA5DJ,eA6DI;AAAO,YAAA,IAAI,EAAC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7DJ,eA8DI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,KAFP;AAGI,YAAA,IAAI,EAAC,KAHT;AAII,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWQ,GAJtB;AAKI,YAAA,QAAQ,EAAE,MAAM,KAAKS,aAAL,CAAmB,KAAnB;AALpB;AAAA;AAAA;AAAA;AAAA,kBA9DJ,eAoEI;AAAA;AAAA;AAAA;AAAA,kBApEJ,eAqEI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArEJ,eAsEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,UAFP;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWS,QAJtB;AAKI,YAAA,QAAQ,EAAE,MAAM,KAAKQ,aAAL,CAAmB,UAAnB;AALpB;AAAA;AAAA;AAAA;AAAA,kBAtEJ,eA4EI;AAAA;AAAA;AAAA;AAAA,kBA5EJ,eA6EI;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7EJ,eA8EI;AACA,YAAA,IAAI,EAAC,QADL;AAEA,YAAA,EAAE,EAAC,QAFH;AAGA,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWU,MAHlB;AAIA,YAAA,QAAQ,EAAE,MAAM,KAAKO,aAAL,CAAmB,QAAnB,CAJhB;AAAA,oCAKI;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAQ,cAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAQ,cAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI;AAAQ,cAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9EJ,eAyFI;AAAA;AAAA;AAAA;AAAA,kBAzFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,eA4FM;AAAQ,UAAA,OAAO,EAAE,KAAKnC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5FN;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAmGD;;AAzPsC;;AA4P3C,eAAeJ,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\"\n\nvar current = new Date();\nvar dd = String(current.getDate()).padStart(2, '0');\nvar mm = String(current.getMonth() + 1).padStart(2, '0'); //January is 0!\nvar yyyy = current.getFullYear();\ncurrent = mm + '/' + dd + '/' + yyyy;\nlet stateArr = [\n'author', \n'caption', \n'lang',\n'dateMediaPost',\n'rtCount',\n'fvCount',\n'idStr',\n'uri',\n'dateMint',\n'rarity'];\n\nclass MetaMintPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            author: \"Type author's name here\", \n            caption:\"Type Tweet's caption here\",\n            lang:\"eng\",\n            dateMediaPost:\"Enter Date Here\",\n            rtCount:\"Type Tweet's retweet count here\",\n            fvCount:\"Type Tweet's favorite count here\",\n            idStr: \"Type Tweet's ID String here\",\n            uri: \"Type Tweet's URI Address from IPFS here\",\n            dateMint: current,\n            rarity: \"na\",\n            auth: false};\n      }\n\n    Mint = async () => {\n        let profile = process.env.REACT_APP_CONTRACT_PROFILE\n        let code = `\n        import WildNFT from 0xProfile\n\n        transaction(customData: {String : String}) {\n            // If the person executing this tx doesn't have access to the\n            // resource, then the tx will fail. Thus, references...\n            let receiverRef: &{WildNFT.NFTReceiver}\n            let minterRef: &{WildNFT.NFTAuthMint}\n        \n            // ...in \"prepare\", the code borrows capabilities on the two resources referenced above,\n            // takes in information of the person executing the tx, and validates.\n            prepare(acct: AuthAccount) {\n                let admin = getAccount(`+profile+`)\n                self.receiverRef = acct.getCapability<&{WildNFT.NFTReceiver}>(/public/NFTReceiver)\n                    .borrow()\n                    ?? panic(\"Could not borrow receiver reference.\")\n    \n                self.minterRef = admin.getCapability<&{WildNFT.NFTAuthMint}>(/public/AuthMint)\n                    .borrow()\n                    ?? panic(\"Could not borrow auth minter reference.\")\n        \n                let metadata : {String : String} = customData\n        \n                // This is where the NFT resource itself is created\n                self.minterRef.authMint(authUser: acct)\n                let newNFT <- acct.load<@WildNFT.NFT>(from: /storage/MintedNFT)!\n        \n                // This is where the metadata comes into the picture to join with the new NFT!\n                self.receiverRef.deposit(token: <-newNFT, metadata: metadata)\n        \n                log(\"NFT has been minted and deposited to Account's Collection\")\n            }\n        }`\n        /*let customData = {}\n        stateArr.forEach(el => customData[el] = this.state[el])\n        console.log(\"Dictionary Key: \" + typeof(Object.keys(customData)[0]))\n        console.log(\"Dictionary Value: \" + typeof(customData[\"author\"]))*/\n        const encoded = await fcl\n          .send([\n            fcl.transaction`${code}`,\n            fcl.proposer(fcl.authz),\n            fcl.authorizations([fcl.authz]),\n            fcl.payer(fcl.authz),\n            fcl.limit(50),\n            fcl.args( \n            [ fcl.arg(\n                [{key: \"author\", value: this.state.author},\n                {key: \"caption\", value: this.state.caption},\n                {key: \"lang\", value: this.state.lang},\n                {key: \"dateMediaPost\", value: this.state.dateMediaPost},\n                {key: \"rtCount\", value: this.state.rtCount},\n                {key: \"fvCount\", value: this.state.fvCount},\n                {key: \"idStr\", value: this.state.idStr},\n                {key: \"uri\", value: this.state.uri},\n                {key: \"dateMint\", value: this.state.dateMint},\n                {key: \"rarity\", value: this.state.rarity}], \n                t.Dictionary({key: t.String, value: t.String}))\n            ])  \n        ])     \n        const decoded = await fcl.decode(encoded)\n        console.log(decoded)\n    };\n\n    onInputchange(elementId) {\n        let idValue = document.getElementById(elementId).value\n        switch(elementId){\n        case \"author\":\n          this.setState({\n            author: idValue\n          });\n          console.log(this.state.author);\n          break\n        case \"caption\":\n          this.setState({\n            caption: idValue\n          });\n          console.log(this.state.caption);\n          break\n        case \"lang\":\n          this.setState({\n            lang: idValue\n          });\n          console.log(this.state.lang);\n          break\n        case \"dateMediaPost\":\n          this.setState({\n            dateMediaPost: idValue\n          });\n          console.log(this.state.dateMediaPost);\n          break\n        case \"rtCount\":\n          this.setState({\n            rtCount: idValue\n          });\n          console.log(this.state.rtCount);\n          break\n        case \"fvCount\":\n          this.setState({\n            fvCount: idValue\n          });\n          console.log(this.state.fvCount);\n          break\n        case \"idStr\":\n          this.setState({\n            idStr: idValue\n          });\n          console.log(this.state.idStr);\n          break\n        case \"uri\":\n          this.setState({\n            uri: idValue\n          });\n          console.log(this.state.uri);\n          break\n        case \"dateMint\":\n          this.setState({\n            dateMint: idValue\n          });\n          console.log(this.state.dateMint);\n          break\n        case \"rarity\":\n          this.setState({\n            rarity: idValue\n          });\n          console.log(this.state.rarity);\n          break\n        }      \n      }\n\n    render() {\n      return(\n      <div>\n          <h2>Metadata Minting Page</h2>\n          <div class=\"pageCenter\" id=\"pageCenter\">\n                <div class=\"metaEnter\" id=\"WildMetaEnter\">\n                    <label form=\"author\">Author:</label>\n                    <input \n                        type=\"text\" \n                        id=\"author\" \n                        name=\"author\" \n                        value={this.state.author}\n                        onChange={() => this.onInputchange(\"author\")}></input>\n                    <br></br>\n                    <label form=\"caption\">Caption:</label>\n                    <input \n                        type=\"text\" \n                        id=\"caption\" \n                        name=\"caption\" \n                        value={this.state.caption}\n                        onChange={() => this.onInputchange(\"caption\")}></input>\n                    <br></br>\n                    <label form=\"lang\">Language:</label>\n                    <select \n                    name=\"lang\" \n                    id=\"lang\" \n                    value={this.state.lang}\n                    onChange={() => this.onInputchange(\"lang\")}>\n                        <option value=\"eng\">English</option>\n                        <option value=\"span\">Español</option>\n                        <option value=\"fren\">Francais</option>\n                        <option value=\"kor\">한국어</option>\n                    </select>\n                    <br></br>\n                    <label form=\"dateMediaPost\">Date Media Posted:</label>\n                    <input \n                        type=\"text\" \n                        id=\"dateMediaPost\" \n                        name=\"date-media\" \n                        value={this.state.dateMediaPost}\n                        onChange={() => this.onInputchange(\"dateMediaPost\")}></input>\n                    <br></br>\n                    <label form=\"rtCount\">Retweet Count:</label>\n                    <input \n                        type=\"text\" \n                        id=\"rtCount\" \n                        name=\"rtCount\" \n                        value={this.state.rtCount}\n                        onChange={() => this.onInputchange(\"rtCount\")}></input>\n                    <br></br>\n                    <label form=\"fvCount\">Favorite Count:</label>\n                    <input \n                        type=\"text\" \n                        id=\"fvCount\" \n                        name=\"fvCount\" \n                        value={this.state.fvCount}\n                        onChange={() => this.onInputchange(\"fvCount\")}></input>\n                    <br></br>\n                    <label form=\"idStr\">ID String:</label>\n                    <input \n                        type=\"text\" \n                        id=\"idStr\" \n                        name=\"idStr\" \n                        value={this.state.idStr}\n                        onChange={() => this.onInputchange(\"idStr\")}></input>\n                    <br></br>\n                    <label form=\"uri\">URI Address:</label>\n                    <input \n                        type=\"text\" \n                        id=\"uri\" \n                        name=\"uri\" \n                        value={this.state.uri}\n                        onChange={() => this.onInputchange(\"uri\")}></input>\n                    <br></br>\n                    <label form=\"dateMint\">Date NFT Minted:</label>\n                    <input \n                        type=\"text\" \n                        id=\"dateMint\" \n                        name=\"dateMint\" \n                        value={this.state.dateMint}\n                        onChange={() => this.onInputchange(\"dateMint\")}></input>\n                    <br></br>\n                    <label form=\"rarity\">Rarity Level:</label>\n                    <select \n                    name=\"rarity\" \n                    id=\"rarity\"\n                    value={this.state.rarity}\n                    onChange={() => this.onInputchange(\"rarity\")}>\n                        <option value=\"na\">Select Rarity</option>\n                        <option value=\"low\">Low Rarity</option>\n                        <option value=\"med\">Medium Rarity</option>\n                        <option value=\"high\">High Rarity</option>\n                        <option value=\"max\">Extreme Rarity</option>\n                    </select>\n                    <br></br>\n                </div>\n                <button onClick={this.Mint}>Mint</button>\n          </div>\n      </div>)\n    ;\n    }\n}\n\nexport default MetaMintPage;\n"]},"metadata":{},"sourceType":"module"}