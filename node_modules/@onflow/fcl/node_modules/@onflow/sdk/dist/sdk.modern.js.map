{"version":3,"file":"sdk.modern.js","sources":["../src/interaction/interaction.js","../src/build/build.js","../src/response/response.js","../src/send/unary.js","../src/send/send-transaction.js","../src/send/send-get-transaction.js","../src/send/send-execute-script.js","../src/send/send-get-account.js","../src/send/send-get-events.js","../src/send/send-get-block.js","../src/send/send-get-block-header.js","../src/send/send-get-latest-block.js","../src/send/send-get-block-by-id.js","../src/send/send-get-block-by-height.js","../src/send/send-get-collection.js","../src/send/sdk-send.js","../src/send/send-get-transaction-status.js","../src/send/send-ping.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-ref-block-id.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/encode/encode.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-accounts.js","../src/resolve/resolve-validators.js","../src/resolve/resolve-final-normalization.js","../src/resolve/resolve.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/wallet-utils/encode-signable.js","../src/latest-block/latest-block.js","../src/account/account.js","../src/build/build-authorizations.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-latest-block.js","../src/build/build-get-block-by-id.js","../src/build/build-get-block-by-height.js","../src/build/build-get-collection.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-limit.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-invariant.js","../src/resolve/resolve-proposer-sequence-number.js","../src/sdk.js","../src/utils/deprecate.js"],"sourcesContent":["import {invariant} from \"@onflow/util-invariant\"\n\nexport const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const GET_LATEST_BLOCK /*              */ = \"GET_LATEST_BLOCK\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK_BY_ID /*               */ = \"GET_BLOCK_BY_ID\"\nexport const GET_BLOCK_BY_HEIGHT /*           */ = \"GET_BLOCK_BY_HEIGHT\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\nexport const GET_COLLECTION /*                */ = \"GET_COLLECTION\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /*  */ = \"ACCOUNT\"\nexport const PARAM /*    */ = \"PARAM\"\nexport const ARGUMENT /* */ = \"ARGUMENT\"\n\nexport const AUTHORIZER /* */ = \"authorizer\"\nexport const PAYER /*      */ = \"payer\"\nexport const PROPOSER /*   */ = \"proposer\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computeLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  },\n  \"collection\": {\n    \"id\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\nexport const isNumber = d => typeof d === \"number\"\nexport const isArray = d => Array.isArray(d)\nexport const isObj = d => d !== null && typeof d === \"object\"\nexport const isNull = d => d == null\nexport const isFn = d => typeof d === \"function\"\n\nexport const isInteraction = ix => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = ix => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = wat => ix => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nexport const prepAccount = (acct, opts = {}) => ix => {\n  invariant(\n    typeof acct === \"function\" || typeof acct === \"object\",\n    \"prepAccount must be passed an authorization function or an account object\"\n  )\n  invariant(opts.role != null, \"Account must have a role\")\n\n  const ACCOUNT = JSON.parse(ACCT)\n  const role = opts.role\n  const tempId = uuid()\n\n  acct = typeof acct === \"function\" ? {resolve: acct} : acct\n\n  ix.accounts[tempId] = {\n    ...ACCOUNT,\n    tempId,\n    ...acct,\n    role: {\n      ...ACCOUNT.role,\n      ...(typeof acct.role === \"object\" ? acct.role : {}),\n      [role]: true,\n    },\n  }\n\n  if (role === AUTHORIZER) {\n    ix.authorizations.push(tempId)\n  } else {\n    ix[role] = tempId\n  }\n\n  return ix\n}\n\nexport const makeArgument = arg => ix => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*          */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*            */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*        */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\nexport const makeGetCollection /*           */ = makeIx(GET_COLLECTION)\n\nconst is = wat => ix => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*          */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*            */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*        */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\nexport const isGetCollection /*           */ = is(GET_COLLECTION)\n\nexport const isOk /*  */ = ix => ix.status === OK\nexport const isBad /* */ = ix => ix.status === BAD\nexport const why /*   */ = ix => ix.reason\n\nexport const isAccount /*  */ = account => account.kind === ACCOUNT\nexport const isParam /*    */ = param => param.kind === PARAM\nexport const isArgument /* */ = argument => argument.kind === ARGUMENT\n\nconst hardMode = ix => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return d => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = v => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => ix => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => ix => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = key => ix => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE = `{\n    \"tag\":null,\n    \"transaction\":null,\n    \"transactionStatus\":null,\n    \"transactionId\":null,\n    \"encodedData\":null,\n    \"events\":null,\n    \"account\":null,\n    \"block\":null,\n    \"blockHeader\":null,\n    \"latestBlock\":null,\n    \"collection\":null\n}`\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {grpc} from \"@improbable-eng/grpc-web\"\nimport {NodeHttpTransport} from \"@improbable-eng/grpc-web-node-http-transport\"\nimport {config} from \"@onflow/config\"\n\ngrpc.setDefaultTransport(NodeHttpTransport())\n\nexport async function unary(host, method, request) {\n  const metadataFromConfig = await config().get(\"grpc.metadata\", {})\n  return new Promise((resolve, reject) => {\n    grpc.unary(method, {\n      request: request,\n      host: host,\n      metadata: new grpc.Metadata(metadataFromConfig),\n      onEnd: ({status, statusMessage, message}) => {\n        if (status === grpc.Code.OK) {\n          resolve(message)\n        } else {\n          reject(new Error(statusMessage))\n        }\n      },\n    })\n  })\n}\n","import {AccessAPI, Transaction, SendTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nexport async function sendTransaction(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const tx = new Transaction()\n  tx.setScript(scriptBuffer(ix.message.cadence))\n  tx.setGasLimit(ix.message.computeLimit)\n  tx.setReferenceBlockId(\n    ix.message.refBlock ? hexBuffer(ix.message.refBlock) : null\n  )\n  tx.setPayer(addressBuffer(sansPrefix(ix.accounts[ix.payer].addr)))\n  ix.message.arguments.forEach(arg =>\n    tx.addArguments(argumentBuffer(ix.arguments[arg].asArgument))\n  )\n  ix.authorizations\n    .map(tempId => ix.accounts[tempId].addr)\n    .reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current]\n    }, [])\n    .forEach(addr => tx.addAuthorizers(addressBuffer(sansPrefix(addr))))\n\n  const proposalKey = new Transaction.ProposalKey()\n  proposalKey.setAddress(\n    addressBuffer(sansPrefix(ix.accounts[ix.proposer].addr))\n  )\n  proposalKey.setKeyId(ix.accounts[ix.proposer].keyId)\n  proposalKey.setSequenceNumber(ix.accounts[ix.proposer].sequenceNum)\n\n  tx.setProposalKey(proposalKey)\n\n  // Apply Non Payer Signatures to Payload Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addPayloadSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying payload signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addEnvelopeSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying envelope signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  const req = new SendTransactionRequest()\n  req.setTransaction(tx)\n\n  var t1 = Date.now()\n  const res = await unary(opts.node, AccessAPI.SendTransaction, req)\n  var t2 = Date.now()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionId = u8ToHex(res.getId_asU8())\n\n  if (typeof window !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransaction(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransaction, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const unwrapKey = key => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    sequenceNumber: key.getSequenceNumber()\n  })\n\n  const unwrapSignature = sig => ({\n    address: u8ToHex(sig.getAddress_asU8()),\n    keyId: sig.getKeyId(),\n    signature: u8ToHex(sig.getSignature_asU8())\n  })\n\n  let transaction = res.getTransaction()\n  ret.transaction = {\n      script: Buffer.from(transaction.getScript_asU8()).toString(\"utf8\"),\n      args: (transaction.getArgumentsList()).map(arg => JSON.parse(Buffer.from(arg).toString(\"utf8\"))),\n      referenceBlockId: u8ToHex(transaction.getReferenceBlockId_asU8()),\n      gasLimit: transaction.getGasLimit(),\n      proposalKey: unwrapKey(transaction.getProposalKey()),\n      payer: u8ToHex(transaction.getPayer_asU8()),\n      authorizers: (transaction.getAuthorizersList()).map(u8ToHex),\n      payloadSignatures: (transaction.getPayloadSignaturesList()).map(unwrapSignature),\n      envelopeSignatures: (transaction.getEnvelopeSignaturesList()).map(unwrapSignature)\n  }\n\n  return ret\n}\n","import {ExecuteScriptAtLatestBlockRequest, ExecuteScriptAtBlockIDRequest, ExecuteScriptAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendExecuteScript(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new ExecuteScriptAtBlockIDRequest()\n    \n    req.setBlockId(hexBuffer(ix.block.id))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockID, req)\n  } else if (ix.block.height) {\n    req = new ExecuteScriptAtBlockHeightRequest()\n\n    req.setBlockHeight(Number(ix.block.height))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockHeight, req) \n  } else {\n    req = new ExecuteScriptAtLatestBlockRequest()\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtLatestBlock, req)\n  }\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.encodedData = JSON.parse(Buffer.from(res.getValue_asU8()).toString(\"utf8\"))\n\n  return ret\n}\n","import {GetAccountAtLatestBlockRequest, GetAccountAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nexport async function sendGetAccount(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = ix.block.height ? new GetAccountAtBlockHeightRequest() : new GetAccountAtLatestBlockRequest()\n  if (ix.block.height) req.setBlockHeight(Number(ix.block.height))\n  req.setAddress(addressBuffer(sansPrefix(ix.account.addr)))\n\n  const res = await unary(opts.node, ix.block.height ? AccessAPI.GetAccountAtBlockHeight : AccessAPI.GetAccountAtLatestBlock, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const account = res.getAccount()\n\n  let contractsMap;\n  const contracts = (contractsMap = account.getContractsMap()) ? contractsMap.getEntryList().reduce((acc, contract) => ({\n    ...acc,\n    [contract[0]]: Buffer.from(contract[1] || new UInt8Array()).toString(\"utf8\")\n  }), {}) : {}\n\n  ret.account = {\n    address: withPrefix(u8ToHex(account.getAddress_asU8())),\n    balance: account.getBalance(),\n    code: Buffer.from(account.getCode_asU8() || new UInt8Array()).toString(\"utf8\"),\n    contracts,\n    keys: account.getKeysList().map(publicKey => ({\n      index: publicKey.getIndex(),\n      publicKey: u8ToHex(publicKey.getPublicKey_asU8()),\n      signAlgo: publicKey.getSignAlgo(),\n      hashAlgo: publicKey.getHashAlgo(),\n      weight: publicKey.getWeight(),\n      sequenceNumber: publicKey.getSequenceNumber(),\n      revoked: publicKey.getRevoked(),\n    })),\n  }\n\n  return ret\n}\n","import {GetEventsForHeightRangeRequest, GetEventsForBlockIDsRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetEvents(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n  \n  ix = await ix\n \n  let res\n  const req = ix.events.start ? new GetEventsForHeightRangeRequest() : new GetEventsForBlockIDsRequest()\n  req.setType(ix.events.eventType)\n  \n  if (ix.events.start) {\n    req.setStartHeight(Number(ix.events.start))\n    req.setEndHeight(Number(ix.events.end))\n\n    res = await unary(opts.node, AccessAPI.GetEventsForHeightRange, req)\n  } else {\n    ix.events.blockIds.forEach(id =>\n      req.addBlockIds(hexBuffer(id))\n    )\n\n    res = await unary(opts.node, AccessAPI.GetEventsForBlockIDs, req)\n  }\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const results = res.getResultsList()\n  ret.events = results.reduce((blocks, result) => {\n    const blockId = u8ToHex(result.getBlockId_asU8())\n    const blockHeight = result.getBlockHeight()\n    const blockTimestamp = result.getBlockTimestamp().toDate().toISOString()\n    const events = result.getEventsList()\n    events.forEach(event => {\n      blocks.push({\n        blockId,\n        blockHeight,\n        blockTimestamp,\n        type: event.getType(),\n        transactionId: u8ToHex(event.getTransactionId_asU8()),\n        transactionIndex: event.getTransactionIndex(),\n        eventIndex: event.getEventIndex(),\n        payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n      })\n    })\n    return blocks\n  }, [])\n\n  return ret\n}\n","import {GetBlockByIDRequest, GetBlockByHeightRequest, GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlock(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new GetBlockByIDRequest()\n    req.setId(hexBuffer(ix.block.id))\n\n    res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n  } else if (ix.block.height) {\n    req = new GetBlockByHeightRequest()\n    req.setHeight(Number(ix.block.height))\n    \n    res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n  } else {\n    req = new GetLatestBlockRequest()\n\n    if (ix.block && ix.block.isSealed) {\n      req.setIsSealed(ix.block.isSealed)\n    }\n\n    res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n  }\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = (block.getSignaturesList()).map(u8ToHex)\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp().toDate().toISOString(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: (collectionGuarantee.getSignaturesList()).map(u8ToHex),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: (blockSeal.getExecutionReceiptSignaturesList()).map(u8ToHex),\n      resultApprovalSignatures: (blockSeal.getResultApprovalSignaturesList()).map(u8ToHex),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetLatestBlockHeaderRequest, GetBlockHeaderByIDRequest, GetBlockHeaderByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockHeader(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new GetBlockHeaderByIDRequest()\n    req.setId(hexBuffer(ix.block.id))\n\n    res = await unary(opts.node, AccessAPI.GetBlockHeaderByID, req)\n  } else if (ix.block.height) {\n    req = new GetBlockHeaderByHeightRequest()\n    req.setHeight(Number(ix.block.height))\n\n    res = await unary(opts.node, AccessAPI.GetBlockHeaderByHeight, req)\n  } else {\n    req = new GetLatestBlockHeaderRequest()\n\n    if (ix.block && ix.block.isSealed) {\n      req.setIsSealed(ix.block.isSealed)\n    }\n\n    res = await unary(opts.node, AccessAPI.GetLatestBlockHeader, req)\n  }\n\n  const blockHeader = res.getBlock()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.blockHeader = {\n    id: u8ToHex(blockHeader.getId_asU8()),\n    parentId: u8ToHex(blockHeader.getParentId_asU8()),\n    height: blockHeader.getHeight(),\n    timestamp: blockHeader.getTimestamp().toDate().toISOString(),\n  }\n\n  return ret\n}\n","import {GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nconst latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport async function sendGetLatestBlock(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetLatestBlockRequest()\n\n  if (ix.latestBlock && ix.latestBlock.isSealed) {\n    req.setIsSealed(ix.latestBlock.isSealed)\n    latestBlockDeprecationNotice()\n  }\n\n  if (ix.block && ix.block.isSealed) {\n    req.setIsSealed(ix.block.isSealed)\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockById(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByIDRequest()\n  req.setId(hexBuffer(ix.block.id))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nexport async function sendGetBlockByHeight(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByHeightRequest()\n  req.setHeight(Number(ix.block.height))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetCollectionByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetCollection(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req = new GetCollectionByIDRequest()\n  req.setId(hexBuffer(ix.collection.id))\n\n  let res = await unary(opts.node, AccessAPI.GetCollectionByID, req)\n\n  const collection = res.getCollection()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.collection = {\n    id: u8ToHex(collection.getId_asU8()),\n    transactionIds: (collection.getTransactionIdsList()).map(u8ToHex)\n  }\n\n  return ret\n}\n","import {\n    isTransaction,\n    isGetTransaction,\n    isGetTransactionStatus,\n    isScript,\n    isGetAccount,\n    isGetEvents,\n    isGetBlock,\n    isGetBlockHeader,\n    isGetLatestBlock,\n    isGetBlockById,\n    isGetBlockByHeight,\n    isPing,\n    isGetCollection,\n} from \"../interaction/interaction.js\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {sendGetBlock} from \"./send-get-block.js\"\nimport {sendGetBlockHeader} from \"./send-get-block-header.js\"\nimport {sendGetLatestBlock} from \"./send-get-latest-block.js\"\nimport {sendGetBlockById} from \"./send-get-block-by-id.js\"\nimport {sendGetBlockByHeight} from \"./send-get-block-by-height.js\"\nimport {sendGetCollection} from \"./send-get-collection.js\"\nimport {sendPing} from \"./send-ping.js\"\nimport {config} from \"@onflow/config\"\n\nexport const send = async (ix, opts = {}) => {\n    opts.node = opts.node || (await config().get(\"accessNode.api\"))\n    ix = await ix\n\n    switch (true) {\n        case isTransaction(ix):\n            return opts.sendTransaction ? opts.sendTransaction(ix, opts) : sendTransaction(ix, opts)\n        case isGetTransactionStatus(ix):\n            return opts.sendGetTransactionStatus ? opts.sendGetTransactionStatus(ix, opts) : sendGetTransactionStatus(ix, opts)\n        case isGetTransaction(ix):\n            return opts.sendGetTransaction ? opts.sendGetTransaction(ix, opts) : sendGetTransaction(ix, opts)\n        case isScript(ix):\n            return opts.sendExecuteScript ? opts.sendExecuteScript(ix, opts) : sendExecuteScript(ix, opts)\n        case isGetAccount(ix):\n            return opts.sendGetAccount ? opts.sendGetAccount(ix, opts) : sendGetAccount(ix, opts)\n        case isGetEvents(ix):\n            return opts.sendGetEvents ? opts.sendGetEvents(ix, opts) : sendGetEvents(ix, opts)\n        case isGetLatestBlock(ix):\n            return opts.sendGetLatestBlock ? opts.sendGetLatestBlock(ix, opts) : sendGetLatestBlock(ix,  opts)\n        case isGetBlock(ix):\n            return opts.sendGetBlock ? opts.sendGetBlock(ix, opts) : sendGetBlock(ix, opts)\n        case isGetBlockHeader(ix):\n            return opts.sendGetBlockHeader ? opts.sendGetBlockHeader(ix, opts) : sendGetBlockHeader(ix, opts)\n        case isGetBlockById(ix):\n            return opts.sendGetBlockById ? opts.sendGetBlockById(ix, opts) : sendGetBlockById(ix, opts)\n        case isGetBlockByHeight(ix):\n            return opts.sendGetBlockByHeight ? opts.sendGetBlockByHeight(ix, opts) : sendGetBlockByHeight(ix, opts)\n        case isGetCollection(ix):\n            return opts.sendGetCollection ? opts.sendGetCollection(ix, opts) : sendGetCollection(ix, opts)\n        case isPing(ix):\n            return opts.sendPing ? opts.sendPing(ix, opts) : sendPing(ix, opts)\n        default:\n            return ix\n    }\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransactionStatus(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransactionResult, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionStatus = {\n    status: res.getStatus(),\n    statusCode: res.getStatusCode(),\n    errorMessage: res.getErrorMessage(),\n    events: events.map(event => ({\n      type: event.getType(),\n      transactionId: u8ToHex(event.getTransactionId_asU8()),\n      transactionIndex: event.getTransactionIndex(),\n      eventIndex: event.getEventIndex(),\n      payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n    })),\n  }\n\n  return ret\n}\n","import {AccessAPI, PingRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nexport async function sendPing(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new PingRequest()\n\n  const res = await unary(opts.node, AccessAPI.Ping, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    }\n  ])\n}\n","const latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/decode Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async (i) => i\n\nconst decodeVoid = async () => null\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async (v) => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      (v) =>\n        new Promise(async (res) =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[\n      await recurseDecode(v.key, decoders, [...stack, v.key])\n    ] = await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeNumber,\n  Int: decodeNumber,\n  UInt8: decodeNumber,\n  Int8: decodeNumber,\n  UInt16: decodeNumber,\n  Int16: decodeNumber,\n  UInt32: decodeNumber,\n  Int32: decodeNumber,\n  UInt64: decodeNumber,\n  Int64: decodeNumber,\n  UInt128: decodeNumber,\n  Int128: decodeNumber,\n  UInt256: decodeNumber,\n  Int256: decodeNumber,\n  Word8: decodeNumber,\n  Word16: decodeNumber,\n  Word32: decodeNumber,\n  Word64: decodeNumber,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find((decoder) => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n  return await recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n\n  if (response.encodedData) {\n    return await decode(response.encodedData, decoders)\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(\n        response.transactionStatus.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, decoders),\n          }\n        })\n      ),\n    }\n  } else if (response.transaction) {\n    return response.transaction\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          blockId: e.blockId,\n          blockHeight: e.blockHeight,\n          blockTimestamp: e.blockTimestamp,\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, decoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  } else if (response.collection) {\n    return response.collection\n  }\n\n  return null\n}\n","import {isTransaction, Ok, interaction, pipe} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\n\nasync function getRefId (opts) {\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await send(ix, opts)\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce(\n          (cadence, [key, value]) => cadence.replace(key, value),\n          cadence\n        )\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      ix.arguments[id].asArgument = cast(arg)\n    }\n  }\n\n  return ix\n}\n","import { encode } from '@onflow/rlp';\n\nexport const encodeTransactionPayload = tx => prependTransactionDomainTag(rlpEncode(preparePayload(tx)))\nexport const encodeTransactionEnvelope = tx => prependTransactionDomainTag(rlpEncode(prepareEnvelope(tx)))\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst TRANSACTION_DOMAIN_TAG = rightPaddedHexBuffer(Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"), 32).toString(\"hex\")\nconst prependTransactionDomainTag = tx => TRANSACTION_DOMAIN_TAG + tx\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => leftPaddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.cadence),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.computeLimit,\n    addressBuffer(tx.proposalKey.address),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(tx.payer),\n    tx.authorizers.map(addressBuffer),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  envelopeFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"cadence\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"computeLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst envelopeFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nexport function findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  inside.delete(ix.payer)\n  return Array.from(inside)\n}\n\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set([ix.payer])\n  return Array.from(outside)\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    // if (!acct.role.proposer) {\n    //   ix.accounts[id].keyId = keyId\n    // }\n    ix.accounts[id].signature = signature\n  }\n}\n\nexport const createSignableVoucher = ix => {\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: withPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: withPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => withPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n    payloadSigs: findInsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    })),\n  }\n}\n\nexport function buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.1\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: sansPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"../interaction/interaction.js\"\nimport {createSignableVoucher} from \"./resolve-signatures\"\n\nconst isFn = v => typeof v === \"function\"\nexport function buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.1\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    var old = last || ax\n    if (isFn(ax.resolve)) ax = await ax.resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer && ix.payer === old.tempId) {\n        ix.payer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = [...authorizations, ax.tempId]\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import { get, pipe, Ok, Bad } from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, 'ix.validators', [])\n  return pipe(ix, validators.map(cb => ix => cb(ix, { Ok, Bad })))\n}   \n","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nimport {send} from \"../send/sdk-send.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveRefBlockId} from \"./resolve-ref-block-id.js\"\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\n\nexport const resolve = pipe([\n    resolveCadence,\n    resolveArguments,\n    resolveAccounts,\n    /* special */ execFetchRef,\n    /* special */ execFetchSequenceNumber,\n    resolveSignatures,\n    resolveFinalNormalization,\n    resolveValidators,\n])\n\nasync function execFetchRef(ix) {\n    if (isTransaction(ix) && ix.message.refBlock == null) {\n        ix.message.refBlock = (await send(build([getBlock()])).then(decode)).id\n    }\n    return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\nif (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n    ix.accounts[acct.tempId].sequenceNum = await send(await build([getAccount(acct.addr)])).then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n}\nreturn ix\n}\n  ","import {\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\nimport {send as defaultSend} from \"./sdk-send.js\"\n\nexport const send = async (args = [], opts = {}) => {\n  const sendFunction = await config().get(\"sdk.send\", opts.send || defaultSend)\n  const resolveFunction = await config().get(\n    \"sdk.resolve\",\n    opts.resolve || defaultResolve\n  )\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFunction(await resolveFunction(args), opts)\n}\n\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {\n    encodeTransactionPayload,\n    encodeTransactionEnvelope,\n} from \"../encode/encode.js\"\n\nconst findPayloadSigners = (voucher) => {\n    // Payload Signers Are: (authorizers + proposer) - payer\n    let payload = new Set(voucher.authorizers)\n    payload.add(voucher.proposalKey.address)\n    payload.delete(voucher.payer)\n    return Array.from(payload).map(withPrefix)\n}\n\nconst findEnvelopeSigners = (voucher) => {\n    // Envelope Signers Are: (payer)\n    let envelope = new Set([voucher.payer])\n    return Array.from(envelope).map(withPrefix)\n}\n\nexport class UnableToDetermineMessageEncodingTypeForSignerAddress extends Error {\n    constructor(signerAddress) {\n      const msg = `\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: ${signerAddress}. \n        Please ensure the address: ${signerAddress} is intended to sign the given transaction as specified by the transaction signable.\n      `.trim()\n      super(msg)\n      this.name = \"Unable To Determine Message Encoding For Signer Addresss\"\n    }\n}\n\nexport const encodeMessageFromSignable = (signable, signerAddress) => {\n    let payloadSigners = findPayloadSigners(signable.voucher)\n    let envelopeSigners = findEnvelopeSigners(signable.voucher)\n\n    const isPayloadSigner = payloadSigners.includes(withPrefix(signerAddress))\n    const isEnvelopeSigner = envelopeSigners.includes(withPrefix(signerAddress))\n\n    if (!isPayloadSigner && !isEnvelopeSigner) {\n        throw new UnableToDetermineMessageEncodingTypeForSignerAddress(signerAddress)\n    }\n\n    const message = {\n        cadence: signable.voucher.cadence,\n        refBlock: signable.voucher.refBlock,\n        computeLimit: signable.voucher.computeLimit,\n        arguments: signable.voucher.arguments,\n        proposalKey: {\n            ...signable.voucher.proposalKey,\n            address: sansPrefix(signable.voucher.proposalKey.address)\n        },\n        payer: sansPrefix(signable.voucher.payer),\n        authorizers: signable.voucher.authorizers.map(sansPrefix),\n        payloadSigs: signable.voucher.payloadSigs.map(ps => ({\n            ...ps,\n            address: sansPrefix(ps.address)\n        }))\n    }\n\n    return isPayloadSigner ? encodeTransactionPayload(message) : encodeTransactionEnvelope(message)\n}\n\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nexport function latestBlock(...args) {\n  let opts = args[1] || (typeof args[0] === \"object\" ? args[0] : undefined)\n  let isSealed = typeof args[0] === \"boolean\" ? args[0] : undefined\n\n  if (typeof args[0] === \"object\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n\n  return send([getBlock(isSealed)], opts).then(decode)\n}\n","import {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\nexport function account(address, opts) {\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {pipe, prepAccount, AUTHORIZER} from \"../interaction/interaction.js\"\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: AUTHORIZER})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n    return update('ix.validators', validators => \n        Array.isArray(validators) ? validators.push(cb) : [cb]\n    )\n}\n","import {pipe} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return ix\n    },\n    validator(ix => {\n      if (typeof ix.block.isSealed === \"boolean\")\n        throw new Error(\"Unable to specify both block height and isSealed.\")\n      if (ix.block.id)\n        throw new Error(\"Unable to specify both block height and block id.\")\n      return ix\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix)) return Bad(ix, \"Unable to specify a block id with a Get Account interaction.\")\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height) return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEvents(eventType, start, end) {\n\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )  \n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockHeightRange(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockIds(eventType, blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetLatestBlock} from \"../interaction/interaction.js\"\n\nexport function getLatestBlock(isSealed = false) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetLatestBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockById} from \"../interaction/interaction.js\"\n\nexport function getBlockById(id) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockById,\n    ix => {\n      ix.block.ids = [id]\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockByHeight} from \"../interaction/interaction.js\"\n\nexport function getBlockByHeight(height) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockByHeight,\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetCollection} from \"../interaction/interaction.js\"\n\nexport function getCollection(id = null) {\n  return pipe([\n    makeGetCollection,\n    ix => {\n      ix.collection.id = id\n      return ix\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","export function limit(computeLimit) {\n  return ix => {\n    ix.message.computeLimit = computeLimit\n    return ix\n  }\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {prepAccount, PROPOSER} from \"../interaction/interaction.js\"\n\nexport async function proposer(authz) {\n  return prepAccount(authz, {role: PROPOSER})\n}\n","import {prepAccount, PAYER} from \"../interaction/interaction.js\"\n\nexport async function payer(authz) {\n  return prepAccount(authz, {role: PAYER})\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([\n    makeScript,\n    put(\"ix.cadence\", template(...args))\n  ])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_COMPUTE_LIMIT = 10\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.computeLimit = ix.message.computeLimit || DEFAULT_COMPUTE_LIMIT\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import { Ok, Bad } from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, { Ok, Bad }) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {isTransaction, Ok} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {build} from \"../build/build.js\"\n\nexport const resolveProposerSequenceNumber = ({ node }) => async (ix) => {\n  if (!(isTransaction(ix))) return Ok(ix)\n  if (ix.accounts[ix.proposer].sequenceNum) return Ok(ix)\n\n  const response = await send(await build([\n    getAccount(ix.accounts[ix.proposer].addr)\n  ]), { node })\n  const decoded = await decodeResponse(response)\n\n  ix.accounts[ix.proposer].sequenceNum = decoded.keys[ix.accounts[ix.proposer].keyId].sequenceNumber\n\n  return Ok(ix)\n}\n","import {deprecate} from \"./utils\"\n// Base\nexport {build} from \"./build/build.js\"\nexport {resolve} from \"./resolve/resolve.js\"\nexport {send} from \"./send/send.js\"\nexport {decode} from \"./decode/sdk-decode.js\"\n\n// Utils\nexport {\n  interaction,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  get,\n  put,\n  update,\n  destroy,\n  isUnknown,\n  isScript,\n  isTransaction,\n  isGetTransaction,\n  isGetTransactionStatus,\n  isGetAccount,\n  isGetEvents,\n  isGetLatestBlock,\n  isGetBlockById,\n  isGetBlockByHeight,\n  isPing,\n  isGetBlock,\n  isGetBlockHeader,\n  isGetCollection,\n} from \"./interaction/interaction.js\"\nexport {createSignableVoucher} from \"./resolve/resolve-signatures\"\nexport {encodeMessageFromSignable} from \"./wallet-utils/encode-signable.js\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// Helpers\nexport {latestBlock} from \"./latest-block/latest-block.js\"\nexport {account} from \"./account/account.js\"\n\n// Builders\nexport {authorizations, authorization} from \"./build/build-authorizations.js\"\nexport {atBlockHeight} from \"./build/build-at-block-height.js\"\nexport {atBlockId} from \"./build/build-at-block-id.js\"\nexport {getAccount} from \"./build/build-get-account.js\"\nexport {getEvents} from \"./build/build-get-events.js\"\nexport {getEventsAtBlockHeightRange} from \"./build/build-get-events-at-block-height-range.js\"\nexport {getEventsAtBlockIds} from \"./build/build-get-events-at-block-ids\"\nexport {getBlock} from \"./build/build-get-block.js\"\nexport {getBlockHeader} from \"./build/build-get-block-header.js\"\nexport {getLatestBlock} from \"./build/build-get-latest-block.js\"\nexport {getBlockById} from \"./build/build-get-block-by-id.js\"\nexport {getBlockByHeight} from \"./build/build-get-block-by-height\"\nexport {getCollection} from \"./build/build-get-collection\"\nexport {getTransactionStatus} from \"./build/build-get-transaction-status.js\"\nexport {getTransaction} from \"./build/build-get-transaction.js\"\nexport {limit} from \"./build/build-limit.js\"\nexport {args, arg} from \"./build/build-arguments.js\"\nexport {proposer} from \"./build/build-proposer.js\"\nexport {payer} from \"./build/build-payer.js\"\nexport {ping} from \"./build/build-ping.js\"\nexport {ref} from \"./build/build-ref.js\"\nexport {script} from \"./build/build-script.js\"\nexport {transaction} from \"./build/build-transaction.js\"\nexport {validator} from \"./build/build-validator.js\"\nexport {invariant} from \"./build/build-invariant.js\"\n\n// Resolvers\nexport {resolveCadence} from \"./resolve/resolve-cadence.js\"\nexport {resolveFinalNormalization} from \"./resolve/resolve-final-normalization\"\nexport {resolveProposerSequenceNumber} from \"./resolve/resolve-proposer-sequence-number\"\nexport {resolveArguments} from \"./resolve/resolve-arguments.js\"\nexport {resolveAccounts} from \"./resolve/resolve-accounts.js\"\nexport {resolveSignatures} from \"./resolve/resolve-signatures.js\"\nexport {resolveValidators} from \"./resolve/resolve-validators.js\"\nexport {resolveRefBlockId} from \"./resolve/resolve-ref-block-id.js\"\n\n// Config\nexport {config} from \"@onflow/config\"\n\n// Deprecated\nexport const params = params =>\n  deprecate.error({\n    name: \"params\",\n    transitionsPath:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n  })\nexport const param = params =>\n  deprecate.warn({\n    name: \"param\",\n    transitionsPath:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n  })\n","const buildWarningMessage = ({name, transitionsPath}) => {\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The ${name} builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: ${transitionsPath}\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst buildErrorMessage = ({name, transitionsPath}) => {\n  console.error(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The ${name} builder has been removed from the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: ${transitionsPath}\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst warn = deprecated => buildWarningMessage(deprecated)\n\nconst error = deprecated => {\n  buildErrorMessage(deprecated)\n}\n\nexport const deprecate = {\n  warn,\n  error,\n}\n"],"names":["IX","KEYS","Set","Object","keys","JSON","parse","interaction","CHARS","split","randChar","Math","random","length","uuid","Array","from","join","isNull","d","Ok","ix","status","Bad","reason","makeIx","wat","tag","prepAccount","acct","opts","invariant","role","ACCOUNT","tempId","accounts","resolve","[object Object]","authorizations","push","makeArgument","arg","message","arguments","value","asArgument","xform","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","makeGetBlock","makeGetBlockHeader","makeGetCollection","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isGetBlock","isGetBlockHeader","isGetCollection","isOk","isBad","why","recPipe","async","fns","key","has","Error","hardMode","hd","rest","cur","isNumber","hasOwnProperty","isInteraction","e","pipe","args","arg1","arg2","isArray","identity","v","get","fallback","assigns","put","update","fn","destroy","build","response","unary","host","method","request","metadataFromConfig","config","Promise","reject","grpc","metadata","Metadata","onEnd","statusMessage","Code","OK","setDefaultTransport","NodeHttpTransport","hexBuffer","hex","Buffer","addressBuffer","addr","padStart","pad","u8ToHex","u8","toString","argumentBuffer","stringify","send","node","sendTransaction","defaultUnary","tx","Transaction","setScript","script","scriptBuffer","cadence","setGasLimit","computeLimit","setReferenceBlockId","refBlock","setPayer","sansPrefix","payer","forEach","addArguments","map","reduce","prev","current","find","item","addAuthorizers","proposalKey","ProposalKey","setAddress","proposer","setKeyId","keyId","setSequenceNumber","sequenceNum","setProposalKey","values","signature","sig","Signature","setSignature","addPayloadSignatures","error","console","addEnvelopeSignatures","req","SendTransactionRequest","setTransaction","t1","Date","now","res","AccessAPI","SendTransaction","t2","ret","transactionId","getId_asU8","window","dispatchEvent","CustomEvent","detail","txId","delta","sendGetTransactionStatus","GetTransactionRequest","setId","transaction","id","GetTransactionResult","events","getEventsList","transactionStatus","getStatus","statusCode","getStatusCode","errorMessage","getErrorMessage","event","type","getType","getTransactionId_asU8","transactionIndex","getTransactionIndex","eventIndex","getEventIndex","payload","getPayload_asU8","sendGetTransaction","GetTransaction","unwrapSignature","address","getAddress_asU8","getKeyId","getSignature_asU8","getTransaction","getScript_asU8","getArgumentsList","referenceBlockId","getReferenceBlockId_asU8","gasLimit","getGasLimit","getProposalKey","sequenceNumber","getSequenceNumber","getPayer_asU8","authorizers","getAuthorizersList","payloadSignatures","getPayloadSignaturesList","envelopeSignatures","getEnvelopeSignaturesList","sendExecuteScript","block","ExecuteScriptAtBlockIDRequest","setBlockId","code","ExecuteScriptAtBlockID","height","ExecuteScriptAtBlockHeightRequest","setBlockHeight","Number","ExecuteScriptAtBlockHeight","ExecuteScriptAtLatestBlockRequest","ExecuteScriptAtLatestBlock","encodedData","getValue_asU8","sendGetAccount","GetAccountAtBlockHeightRequest","GetAccountAtLatestBlockRequest","account","GetAccountAtBlockHeight","GetAccountAtLatestBlock","getAccount","contractsMap","contracts","getContractsMap","getEntryList","acc","contract","UInt8Array","withPrefix","balance","getBalance","getCode_asU8","getKeysList","publicKey","index","getIndex","getPublicKey_asU8","signAlgo","getSignAlgo","hashAlgo","getHashAlgo","weight","getWeight","revoked","getRevoked","sendGetEvents","start","GetEventsForHeightRangeRequest","GetEventsForBlockIDsRequest","setType","eventType","setStartHeight","setEndHeight","end","GetEventsForHeightRange","blockIds","addBlockIds","GetEventsForBlockIDs","results","getResultsList","blocks","result","blockId","getBlockId_asU8","blockHeight","getBlockHeight","blockTimestamp","getBlockTimestamp","toDate","toISOString","sendGetLatestBlock","GetLatestBlockRequest","latestBlock","isSealed","setIsSealed","replace","trim","GetLatestBlock","getBlock","collectionGuarantees","getCollectionGuaranteesList","blockSeals","getBlockSealsList","signatures","getSignaturesList","parentId","getParentId_asU8","getHeight","timestamp","getTimestamp","collectionGuarantee","collectionId","getCollectionId_asU8","blockSeal","executionReceiptId","getExecutionReceiptId_asU8","executionReceiptSignatures","getExecutionReceiptSignaturesList","resultApprovalSignatures","getResultApprovalSignaturesList","sendGetBlock","GetBlockByIDRequest","GetBlockByID","GetBlockByHeightRequest","setHeight","GetBlockByHeight","sendGetBlockHeader","GetBlockHeaderByIDRequest","GetBlockHeaderByID","GetBlockHeaderByHeightRequest","GetBlockHeaderByHeight","GetLatestBlockHeaderRequest","GetLatestBlockHeader","blockHeader","sendGetBlockById","sendGetBlockByHeight","sendGetCollection","GetCollectionByIDRequest","collection","GetCollectionByID","getCollection","transactionIds","getTransactionIdsList","sendPing","PingRequest","Ping","decodeNumber","num","_","stack","decodeImplicit","i","decodeComposite","composite","decoders","decoded","fields","name","recurseDecode","decoder","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","optional","Reference","array","all","Dictionary","dictionary","Event","Resource","Struct","lookup","found","test","RegExp","substring","decodeInstructions","decode","customDecoders","decodeResponse","data","resolveRefBlockId","getRefId","isFn","isString","resolveCadence","where","then","entries","cast","resolveArguments","encodeTransactionPayload","prependTransactionDomainTag","rlpEncode","preparePayload","encodeTransactionEnvelope","prepareEnvelope","leftPaddedHexBuffer","TRANSACTION_DOMAIN_TAG","padEnd","argumentToString","encode","validatePayload","validateEnvelope","preparePayloadSignatures","signers","collectSigners","payloadSigs","signerIndex","sort","a","b","Map","addSigner","set","payloadFields","field","checkField","proposalKeyFields","envelopeFields","payloadSigFields","isObject","check","defaultVal","obj","base","missingFieldError","invalidFieldError","printFieldName","resolveSignatures","insideSigners","findInsideSigners","insidePayload","encodeInsideMessage","prepForEncoding","fetchSignature","outsideSigners","outside","findOutsideSigners","outsidePayload","encodeOutsideMessage","inside","add","delete","signingFunction","f_type","f_vsn","roles","voucher","createSignableVoucher","buildSignable","cid","buildPreSignable","collectAccounts","last","depth","ax","old","authorizer","curr","resolveAccounts","resolveValidators","validators","cb","resolveFinalNormalization","sendFunction","defaultSend","resolveFunction","defaultResolve","decodersFromConfig","pattern","fromEntries","UnableToDetermineMessageEncodingTypeForSignerAddress","constructor","signerAddress","super","this","encodeMessageFromSignable","signable","payloadSigners","findPayloadSigners","envelopeSigners","envelope","findEnvelopeSigners","isPayloadSigner","includes","isEnvelopeSigner","ps","undefined","warn","authz","authorization","validator","atBlockHeight","atBlockId","getEvents","getEventsAtBlockHeightRange","getEventsAtBlockIds","getBlockHeader","getLatestBlock","getBlockById","ids","getBlockByHeight","getTransactionStatus","limit","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","predicate","resolveProposerSequenceNumber","params","transitionsPath","buildErrorMessage","param","buildWarningMessage"],"mappings":"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"}